{"id":"../node_modules/markdown-it/lib/rules_block/blockquote.js","dependencies":[{"name":"/Users/untone/Sites/loyalitycorp-test/package.json","includedInParent":true,"mtime":1557582570376},{"name":"/Users/untone/Sites/loyalitycorp-test/node_modules/markdown-it/package.json","includedInParent":true,"mtime":1557582566305},{"name":"../common/utils","loc":{"line":5,"column":22},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/markdown-it/lib/rules_block/blockquote.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/markdown-it/lib/common/utils.js"}],"generated":{"js":"// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldSCount, oldBMarks, oldIndent, oldParentType, lines, initial, offset, ch,\n      terminatorRules, token,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space (but not tab, check cmark impl) after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - offset % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < oldIndent) { break; }\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space (but not tab, check cmark impl) after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - offset % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/blockquote.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}}],"sources":{"../node_modules/markdown-it/lib/rules_block/blockquote.js":"// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldSCount, oldBMarks, oldIndent, oldParentType, lines, initial, offset, ch,\n      terminatorRules, token,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space (but not tab, check cmark impl) after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - offset % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < oldIndent) { break; }\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space (but not tab, check cmark impl) after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - offset % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n"},"lineCount":175}},"error":null,"hash":"4655fe77281efa549153073622de6e76","cacheData":{"env":{}}}
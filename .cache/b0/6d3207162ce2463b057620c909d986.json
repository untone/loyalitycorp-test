{"id":"../node_modules/katex/src/parseTree.js","dependencies":[{"name":"/Users/untone/Sites/loyalitycorp-test/package.json","includedInParent":true,"mtime":1557582570376},{"name":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/package.json","includedInParent":true,"mtime":1557582566587},{"name":"./Parser","loc":{"line":6,"column":21},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/parseTree.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/Parser.js"}],"generated":{"js":"/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\nvar Parser = require(\"./Parser\");\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function(toParse, settings) {\n    var parser = new Parser(toParse, settings);\n\n    return parser.parse();\n};\n\nmodule.exports = parseTree;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/katex/src/parseTree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/katex/src/parseTree.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"../node_modules/katex/src/parseTree.js":"/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\nvar Parser = require(\"./Parser\");\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function(toParse, settings) {\n    var parser = new Parser(toParse, settings);\n\n    return parser.parse();\n};\n\nmodule.exports = parseTree;\n"},"lineCount":18}},"error":null,"hash":"b7790e5b9706b39653fce328b7305495","cacheData":{"env":{}}}
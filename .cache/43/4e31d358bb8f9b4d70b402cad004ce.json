{"id":"../node_modules/katex/src/buildCommon.js","dependencies":[{"name":"/Users/untone/Sites/loyalitycorp-test/package.json","includedInParent":true,"mtime":1557582570376},{"name":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/package.json","includedInParent":true,"mtime":1557582566587},{"name":"./domTree","loc":{"line":7,"column":22},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildCommon.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/domTree.js"},{"name":"./fontMetrics","loc":{"line":8,"column":26},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildCommon.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/fontMetrics.js"},{"name":"./symbols","loc":{"line":9,"column":22},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildCommon.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/symbols.js"},{"name":"./utils","loc":{"line":10,"column":20},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildCommon.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/utils.js"}],"generated":{"js":"/* eslint no-console:0 */\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar greekCapitals = [\n    \"\\\\Gamma\",\n    \"\\\\Delta\",\n    \"\\\\Theta\",\n    \"\\\\Lambda\",\n    \"\\\\Xi\",\n    \"\\\\Pi\",\n    \"\\\\Sigma\",\n    \"\\\\Upsilon\",\n    \"\\\\Phi\",\n    \"\\\\Psi\",\n    \"\\\\Omega\",\n];\n\nvar dotlessLetters = [\n    \"\\u0131\",   // dotless i, \\imath\n    \"\\u0237\",   // dotless j, \\jmath\n];\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n */\nvar makeSymbol = function(value, style, mode, color, classes) {\n    // Replace the value with its replaced value from symbol.js\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var metrics = fontMetrics.getCharacterMetrics(value, style);\n\n    var symbolNode;\n    if (metrics) {\n        symbolNode = new domTree.symbolNode(\n            value, metrics.height, metrics.depth, metrics.italic, metrics.skew,\n            classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\n            \"No character metrics for '\" + value + \"' in style '\" +\n                style + \"'\");\n        symbolNode = new domTree.symbolNode(value, 0, 0, 0, 0, classes);\n    }\n\n    if (color) {\n        symbolNode.style.color = color;\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\nvar mathsym = function(value, mode, color, classes) {\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text\n    if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n        return makeSymbol(value, \"Main-Regular\", mode, color, classes);\n    } else {\n        return makeSymbol(\n            value, \"AMS-Regular\", mode, color, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar mathDefault = function(value, mode, color, classes, type) {\n    if (type === \"mathord\") {\n        return mathit(value, mode, color, classes);\n    } else if (type === \"textord\") {\n        return makeSymbol(\n            value, \"Main-Regular\", mode, color, classes.concat([\"mathrm\"]));\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Makes a symbol in the italic math font.\n */\nvar mathit = function(value, mode, color, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n            // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n            // need to use Main-Italic instead\n            utils.contains(dotlessLetters, value) ||\n            utils.contains(greekCapitals, value)) {\n        return makeSymbol(\n            value, \"Main-Italic\", mode, color, classes.concat([\"mainit\"]));\n    } else {\n        return makeSymbol(\n            value, \"Math-Italic\", mode, color, classes.concat([\"mathit\"]));\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar makeOrd = function(group, options, type) {\n    var mode = group.mode;\n    var value = group.value;\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var classes = [\"mord\"];\n    var color = options.getColor();\n\n    var font = options.font;\n    if (font) {\n        if (font === \"mathit\" || utils.contains(dotlessLetters, value)) {\n            return mathit(value, mode, color, classes);\n        } else {\n            var fontName = fontMap[font].fontName;\n            if (fontMetrics.getCharacterMetrics(value, fontName)) {\n                return makeSymbol(\n                    value, fontName, mode, color, classes.concat([font]));\n            } else {\n                return mathDefault(value, mode, color, classes, type);\n            }\n        }\n    } else {\n        return mathDefault(value, mode, color, classes, type);\n    }\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    if (elem.children) {\n        for (var i = 0; i < elem.children.length; i++) {\n            if (elem.children[i].height > height) {\n                height = elem.children[i].height;\n            }\n            if (elem.children[i].depth > depth) {\n                depth = elem.children[i].depth;\n            }\n            if (elem.children[i].maxFontSize > maxFontSize) {\n                maxFontSize = elem.children[i].maxFontSize;\n            }\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and color.\n */\nvar makeSpan = function(classes, children, color) {\n    var span = new domTree.span(classes, children);\n\n    sizeElementFromChildren(span);\n\n    if (color) {\n        span.style.color = color;\n    }\n\n    return span;\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar makeFragment = function(children) {\n    var fragment = new domTree.documentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n/**\n * Makes an element placed in each of the vlist elements to ensure that each\n * element has the same max font size. To do this, we create a zero-width space\n * with the correct font size.\n */\nvar makeFontSizer = function(options, fontSize) {\n    var fontSizeInner = makeSpan([], [new domTree.symbolNode(\"\\u200b\")]);\n    fontSizeInner.style.fontSize =\n        (fontSize / options.style.sizeMultiplier) + \"em\";\n\n    var fontSizer = makeSpan(\n        [\"fontsize-ensurer\", \"reset-\" + options.size, \"size5\"],\n        [fontSizeInner]);\n\n    return fontSizer;\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * Arguments:\n *  - children: A list of child or kern nodes to be stacked on top of each other\n *              (i.e. the first element will be at the bottom, and the last at\n *              the top). Element nodes are specified as\n *                {type: \"elem\", elem: node}\n *              while kern nodes are specified as\n *                {type: \"kern\", size: size}\n *  - positionType: The method by which the vlist should be positioned. Valid\n *                  values are:\n *                   - \"individualShift\": The children list only contains elem\n *                                        nodes, and each node contains an extra\n *                                        \"shift\" value of how much it should be\n *                                        shifted (note that shifting is always\n *                                        moving downwards). positionData is\n *                                        ignored.\n *                   - \"top\": The positionData specifies the topmost point of\n *                            the vlist (note this is expected to be a height,\n *                            so positive values move up)\n *                   - \"bottom\": The positionData specifies the bottommost point\n *                               of the vlist (note this is expected to be a\n *                               depth, so positive values move down\n *                   - \"shift\": The vlist will be positioned such that its\n *                              baseline is positionData away from the baseline\n *                              of the first child. Positive values move\n *                              downwards.\n *                   - \"firstBaseline\": The vlist will be positioned such that\n *                                      its baseline is aligned with the\n *                                      baseline of the first child.\n *                                      positionData is ignored. (this is\n *                                      equivalent to \"shift\" with\n *                                      positionData=0)\n *  - positionData: Data used in different ways depending on positionType\n *  - options: An Options object\n *\n */\nvar makeVList = function(children, positionType, positionData, options) {\n    var depth;\n    var currPos;\n    var i;\n    if (positionType === \"individualShift\") {\n        var oldChildren = children;\n        children = [oldChildren[0]];\n\n        // Add in kerns to the list of children to get each element to be\n        // shifted to the correct specified shift\n        depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        currPos = depth;\n        for (i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos -\n                oldChildren[i].elem.depth;\n            var size = diff -\n                (oldChildren[i - 1].elem.height +\n                 oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            children.push({type: \"kern\", size: size});\n            children.push(oldChildren[i]);\n        }\n    } else if (positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = positionData;\n        for (i = 0; i < children.length; i++) {\n            if (children[i].type === \"kern\") {\n                bottom -= children[i].size;\n            } else {\n                bottom -= children[i].elem.height + children[i].elem.depth;\n            }\n        }\n        depth = bottom;\n    } else if (positionType === \"bottom\") {\n        depth = -positionData;\n    } else if (positionType === \"shift\") {\n        depth = -children[0].elem.depth - positionData;\n    } else if (positionType === \"firstBaseline\") {\n        depth = -children[0].elem.depth;\n    } else {\n        depth = 0;\n    }\n\n    // Make the fontSizer\n    var maxFontSize = 0;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"elem\") {\n            maxFontSize = Math.max(maxFontSize, children[i].elem.maxFontSize);\n        }\n    }\n    var fontSizer = makeFontSizer(options, maxFontSize);\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    currPos = depth;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"kern\") {\n            currPos += children[i].size;\n        } else {\n            var child = children[i].elem;\n\n            var shift = -child.depth - currPos;\n            currPos += child.height + child.depth;\n\n            var childWrap = makeSpan([], [fontSizer, child]);\n            childWrap.height -= shift;\n            childWrap.depth += shift;\n            childWrap.style.top = shift + \"em\";\n\n            realChildren.push(childWrap);\n        }\n    }\n\n    // Add in an element at the end with no offset to fix the calculation of\n    // baselines in some browsers (namely IE, sometimes safari)\n    var baselineFix = makeSpan(\n        [\"baseline-fix\"], [fontSizer, new domTree.symbolNode(\"\\u200b\")]);\n    realChildren.push(baselineFix);\n\n    var vlist = makeSpan([\"vlist\"], realChildren);\n    // Fix the final height and depth, in case there were kerns at the ends\n    // since the makeSpan calculation won't take that in to account.\n    vlist.height = Math.max(currPos, vlist.height);\n    vlist.depth = Math.max(-depth, vlist.depth);\n    return vlist;\n};\n\n// A table of size -> font size for the different sizing functions\nvar sizingMultiplier = {\n    size1: 0.5,\n    size2: 0.7,\n    size3: 0.8,\n    size4: 0.9,\n    size5: 1.0,\n    size6: 1.2,\n    size7: 1.44,\n    size8: 1.73,\n    size9: 2.07,\n    size10: 2.49,\n};\n\n// A map of spacing functions to their attributes, like size and corresponding\n// CSS class\nvar spacingFunctions = {\n    \"\\\\qquad\": {\n        size: \"2em\",\n        className: \"qquad\",\n    },\n    \"\\\\quad\": {\n        size: \"1em\",\n        className: \"quad\",\n    },\n    \"\\\\enspace\": {\n        size: \"0.5em\",\n        className: \"enspace\",\n    },\n    \"\\\\;\": {\n        size: \"0.277778em\",\n        className: \"thickspace\",\n    },\n    \"\\\\:\": {\n        size: \"0.22222em\",\n        className: \"mediumspace\",\n    },\n    \"\\\\,\": {\n        size: \"0.16667em\",\n        className: \"thinspace\",\n    },\n    \"\\\\!\": {\n        size: \"-0.16667em\",\n        className: \"negativethinspace\",\n    },\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\",\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\",\n    },\n\n    // \"mathit\" is missing because it requires the use of two fonts: Main-Italic\n    // and Math-Italic.  This is handled by a special case in makeOrd which ends\n    // up calling mathit.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\",\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\",\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\",\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\",\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\",\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\",\n    },\n};\n\nmodule.exports = {\n    fontMap: fontMap,\n    makeSymbol: makeSymbol,\n    mathsym: mathsym,\n    makeSpan: makeSpan,\n    makeFragment: makeFragment,\n    makeVList: makeVList,\n    makeOrd: makeOrd,\n    sizingMultiplier: sizingMultiplier,\n    spacingFunctions: spacingFunctions,\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/katex/src/buildCommon.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}}],"sources":{"../node_modules/katex/src/buildCommon.js":"/* eslint no-console:0 */\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar greekCapitals = [\n    \"\\\\Gamma\",\n    \"\\\\Delta\",\n    \"\\\\Theta\",\n    \"\\\\Lambda\",\n    \"\\\\Xi\",\n    \"\\\\Pi\",\n    \"\\\\Sigma\",\n    \"\\\\Upsilon\",\n    \"\\\\Phi\",\n    \"\\\\Psi\",\n    \"\\\\Omega\",\n];\n\nvar dotlessLetters = [\n    \"\\u0131\",   // dotless i, \\imath\n    \"\\u0237\",   // dotless j, \\jmath\n];\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n */\nvar makeSymbol = function(value, style, mode, color, classes) {\n    // Replace the value with its replaced value from symbol.js\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var metrics = fontMetrics.getCharacterMetrics(value, style);\n\n    var symbolNode;\n    if (metrics) {\n        symbolNode = new domTree.symbolNode(\n            value, metrics.height, metrics.depth, metrics.italic, metrics.skew,\n            classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\n            \"No character metrics for '\" + value + \"' in style '\" +\n                style + \"'\");\n        symbolNode = new domTree.symbolNode(value, 0, 0, 0, 0, classes);\n    }\n\n    if (color) {\n        symbolNode.style.color = color;\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\nvar mathsym = function(value, mode, color, classes) {\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text\n    if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n        return makeSymbol(value, \"Main-Regular\", mode, color, classes);\n    } else {\n        return makeSymbol(\n            value, \"AMS-Regular\", mode, color, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar mathDefault = function(value, mode, color, classes, type) {\n    if (type === \"mathord\") {\n        return mathit(value, mode, color, classes);\n    } else if (type === \"textord\") {\n        return makeSymbol(\n            value, \"Main-Regular\", mode, color, classes.concat([\"mathrm\"]));\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Makes a symbol in the italic math font.\n */\nvar mathit = function(value, mode, color, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n            // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n            // need to use Main-Italic instead\n            utils.contains(dotlessLetters, value) ||\n            utils.contains(greekCapitals, value)) {\n        return makeSymbol(\n            value, \"Main-Italic\", mode, color, classes.concat([\"mainit\"]));\n    } else {\n        return makeSymbol(\n            value, \"Math-Italic\", mode, color, classes.concat([\"mathit\"]));\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar makeOrd = function(group, options, type) {\n    var mode = group.mode;\n    var value = group.value;\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var classes = [\"mord\"];\n    var color = options.getColor();\n\n    var font = options.font;\n    if (font) {\n        if (font === \"mathit\" || utils.contains(dotlessLetters, value)) {\n            return mathit(value, mode, color, classes);\n        } else {\n            var fontName = fontMap[font].fontName;\n            if (fontMetrics.getCharacterMetrics(value, fontName)) {\n                return makeSymbol(\n                    value, fontName, mode, color, classes.concat([font]));\n            } else {\n                return mathDefault(value, mode, color, classes, type);\n            }\n        }\n    } else {\n        return mathDefault(value, mode, color, classes, type);\n    }\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    if (elem.children) {\n        for (var i = 0; i < elem.children.length; i++) {\n            if (elem.children[i].height > height) {\n                height = elem.children[i].height;\n            }\n            if (elem.children[i].depth > depth) {\n                depth = elem.children[i].depth;\n            }\n            if (elem.children[i].maxFontSize > maxFontSize) {\n                maxFontSize = elem.children[i].maxFontSize;\n            }\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and color.\n */\nvar makeSpan = function(classes, children, color) {\n    var span = new domTree.span(classes, children);\n\n    sizeElementFromChildren(span);\n\n    if (color) {\n        span.style.color = color;\n    }\n\n    return span;\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar makeFragment = function(children) {\n    var fragment = new domTree.documentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n/**\n * Makes an element placed in each of the vlist elements to ensure that each\n * element has the same max font size. To do this, we create a zero-width space\n * with the correct font size.\n */\nvar makeFontSizer = function(options, fontSize) {\n    var fontSizeInner = makeSpan([], [new domTree.symbolNode(\"\\u200b\")]);\n    fontSizeInner.style.fontSize =\n        (fontSize / options.style.sizeMultiplier) + \"em\";\n\n    var fontSizer = makeSpan(\n        [\"fontsize-ensurer\", \"reset-\" + options.size, \"size5\"],\n        [fontSizeInner]);\n\n    return fontSizer;\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * Arguments:\n *  - children: A list of child or kern nodes to be stacked on top of each other\n *              (i.e. the first element will be at the bottom, and the last at\n *              the top). Element nodes are specified as\n *                {type: \"elem\", elem: node}\n *              while kern nodes are specified as\n *                {type: \"kern\", size: size}\n *  - positionType: The method by which the vlist should be positioned. Valid\n *                  values are:\n *                   - \"individualShift\": The children list only contains elem\n *                                        nodes, and each node contains an extra\n *                                        \"shift\" value of how much it should be\n *                                        shifted (note that shifting is always\n *                                        moving downwards). positionData is\n *                                        ignored.\n *                   - \"top\": The positionData specifies the topmost point of\n *                            the vlist (note this is expected to be a height,\n *                            so positive values move up)\n *                   - \"bottom\": The positionData specifies the bottommost point\n *                               of the vlist (note this is expected to be a\n *                               depth, so positive values move down\n *                   - \"shift\": The vlist will be positioned such that its\n *                              baseline is positionData away from the baseline\n *                              of the first child. Positive values move\n *                              downwards.\n *                   - \"firstBaseline\": The vlist will be positioned such that\n *                                      its baseline is aligned with the\n *                                      baseline of the first child.\n *                                      positionData is ignored. (this is\n *                                      equivalent to \"shift\" with\n *                                      positionData=0)\n *  - positionData: Data used in different ways depending on positionType\n *  - options: An Options object\n *\n */\nvar makeVList = function(children, positionType, positionData, options) {\n    var depth;\n    var currPos;\n    var i;\n    if (positionType === \"individualShift\") {\n        var oldChildren = children;\n        children = [oldChildren[0]];\n\n        // Add in kerns to the list of children to get each element to be\n        // shifted to the correct specified shift\n        depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        currPos = depth;\n        for (i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos -\n                oldChildren[i].elem.depth;\n            var size = diff -\n                (oldChildren[i - 1].elem.height +\n                 oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            children.push({type: \"kern\", size: size});\n            children.push(oldChildren[i]);\n        }\n    } else if (positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = positionData;\n        for (i = 0; i < children.length; i++) {\n            if (children[i].type === \"kern\") {\n                bottom -= children[i].size;\n            } else {\n                bottom -= children[i].elem.height + children[i].elem.depth;\n            }\n        }\n        depth = bottom;\n    } else if (positionType === \"bottom\") {\n        depth = -positionData;\n    } else if (positionType === \"shift\") {\n        depth = -children[0].elem.depth - positionData;\n    } else if (positionType === \"firstBaseline\") {\n        depth = -children[0].elem.depth;\n    } else {\n        depth = 0;\n    }\n\n    // Make the fontSizer\n    var maxFontSize = 0;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"elem\") {\n            maxFontSize = Math.max(maxFontSize, children[i].elem.maxFontSize);\n        }\n    }\n    var fontSizer = makeFontSizer(options, maxFontSize);\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    currPos = depth;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"kern\") {\n            currPos += children[i].size;\n        } else {\n            var child = children[i].elem;\n\n            var shift = -child.depth - currPos;\n            currPos += child.height + child.depth;\n\n            var childWrap = makeSpan([], [fontSizer, child]);\n            childWrap.height -= shift;\n            childWrap.depth += shift;\n            childWrap.style.top = shift + \"em\";\n\n            realChildren.push(childWrap);\n        }\n    }\n\n    // Add in an element at the end with no offset to fix the calculation of\n    // baselines in some browsers (namely IE, sometimes safari)\n    var baselineFix = makeSpan(\n        [\"baseline-fix\"], [fontSizer, new domTree.symbolNode(\"\\u200b\")]);\n    realChildren.push(baselineFix);\n\n    var vlist = makeSpan([\"vlist\"], realChildren);\n    // Fix the final height and depth, in case there were kerns at the ends\n    // since the makeSpan calculation won't take that in to account.\n    vlist.height = Math.max(currPos, vlist.height);\n    vlist.depth = Math.max(-depth, vlist.depth);\n    return vlist;\n};\n\n// A table of size -> font size for the different sizing functions\nvar sizingMultiplier = {\n    size1: 0.5,\n    size2: 0.7,\n    size3: 0.8,\n    size4: 0.9,\n    size5: 1.0,\n    size6: 1.2,\n    size7: 1.44,\n    size8: 1.73,\n    size9: 2.07,\n    size10: 2.49,\n};\n\n// A map of spacing functions to their attributes, like size and corresponding\n// CSS class\nvar spacingFunctions = {\n    \"\\\\qquad\": {\n        size: \"2em\",\n        className: \"qquad\",\n    },\n    \"\\\\quad\": {\n        size: \"1em\",\n        className: \"quad\",\n    },\n    \"\\\\enspace\": {\n        size: \"0.5em\",\n        className: \"enspace\",\n    },\n    \"\\\\;\": {\n        size: \"0.277778em\",\n        className: \"thickspace\",\n    },\n    \"\\\\:\": {\n        size: \"0.22222em\",\n        className: \"mediumspace\",\n    },\n    \"\\\\,\": {\n        size: \"0.16667em\",\n        className: \"thinspace\",\n    },\n    \"\\\\!\": {\n        size: \"-0.16667em\",\n        className: \"negativethinspace\",\n    },\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\",\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\",\n    },\n\n    // \"mathit\" is missing because it requires the use of two fonts: Main-Italic\n    // and Math-Italic.  This is handled by a special case in makeOrd which ends\n    // up calling mathit.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\",\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\",\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\",\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\",\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\",\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\",\n    },\n};\n\nmodule.exports = {\n    fontMap: fontMap,\n    makeSymbol: makeSymbol,\n    mathsym: mathsym,\n    makeSpan: makeSpan,\n    makeFragment: makeFragment,\n    makeVList: makeVList,\n    makeOrd: makeOrd,\n    sizingMultiplier: sizingMultiplier,\n    spacingFunctions: spacingFunctions,\n};\n"},"lineCount":451}},"error":null,"hash":"80e1828a69a478626f5e7a98e6b1c9f3","cacheData":{"env":{}}}
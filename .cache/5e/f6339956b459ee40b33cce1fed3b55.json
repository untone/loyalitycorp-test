{"id":"../node_modules/match-at/lib/matchAt.js","dependencies":[{"name":"/Users/untone/Sites/loyalitycorp-test/package.json","includedInParent":true,"mtime":1557582570376},{"name":"/Users/untone/Sites/loyalitycorp-test/node_modules/match-at/package.json","includedInParent":true,"mtime":1557582566667}],"generated":{"js":"function getRelocatable(re) {\n  // In the future, this could use a WeakMap instead of an expando.\n  if (!re.__matchAtRelocatable) {\n    // Disjunctions are the lowest-precedence operator, so we can make any\n    // pattern match the empty string by appending `|()` to it:\n    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-patterns\n    var source = re.source + '|()';\n\n    // We always make the new regex global.\n    var flags = 'g' + (re.ignoreCase ? 'i' : '') + (re.multiline ? 'm' : '') + (re.unicode ? 'u' : '')\n    // sticky (/.../y) doesn't make sense in conjunction with our relocation\n    // logic, so we ignore it here.\n    ;\n\n    re.__matchAtRelocatable = new RegExp(source, flags);\n  }\n  return re.__matchAtRelocatable;\n}\n\nfunction matchAt(re, str, pos) {\n  if (re.global || re.sticky) {\n    throw new Error('matchAt(...): Only non-global regexes are supported');\n  }\n  var reloc = getRelocatable(re);\n  reloc.lastIndex = pos;\n  var match = reloc.exec(str);\n  // Last capturing group is our sentinel that indicates whether the regex\n  // matched at the given location.\n  if (match[match.length - 1] == null) {\n    // Original regex matched.\n    match.length = match.length - 1;\n    return match;\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = matchAt;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/match-at/lib/matchAt.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"../node_modules/match-at/lib/matchAt.js":"function getRelocatable(re) {\n  // In the future, this could use a WeakMap instead of an expando.\n  if (!re.__matchAtRelocatable) {\n    // Disjunctions are the lowest-precedence operator, so we can make any\n    // pattern match the empty string by appending `|()` to it:\n    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-patterns\n    var source = re.source + '|()';\n\n    // We always make the new regex global.\n    var flags = 'g' + (re.ignoreCase ? 'i' : '') + (re.multiline ? 'm' : '') + (re.unicode ? 'u' : '')\n    // sticky (/.../y) doesn't make sense in conjunction with our relocation\n    // logic, so we ignore it here.\n    ;\n\n    re.__matchAtRelocatable = new RegExp(source, flags);\n  }\n  return re.__matchAtRelocatable;\n}\n\nfunction matchAt(re, str, pos) {\n  if (re.global || re.sticky) {\n    throw new Error('matchAt(...): Only non-global regexes are supported');\n  }\n  var reloc = getRelocatable(re);\n  reloc.lastIndex = pos;\n  var match = reloc.exec(str);\n  // Last capturing group is our sentinel that indicates whether the regex\n  // matched at the given location.\n  if (match[match.length - 1] == null) {\n    // Original regex matched.\n    match.length = match.length - 1;\n    return match;\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = matchAt;"},"lineCount":38}},"error":null,"hash":"c621a2be01ad28aa1d1f5fdf145cbbdb","cacheData":{"env":{}}}
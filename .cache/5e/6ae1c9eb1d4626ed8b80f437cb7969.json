{"id":"../node_modules/katex/src/buildHTML.js","dependencies":[{"name":"/Users/untone/Sites/loyalitycorp-test/package.json","includedInParent":true,"mtime":1557582570376},{"name":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/package.json","includedInParent":true,"mtime":1557582566587},{"name":"./ParseError","loc":{"line":9,"column":25},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildHTML.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/ParseError.js"},{"name":"./Style","loc":{"line":10,"column":20},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildHTML.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/Style.js"},{"name":"./buildCommon","loc":{"line":12,"column":26},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildHTML.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildCommon.js"},{"name":"./delimiter","loc":{"line":13,"column":24},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildHTML.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/delimiter.js"},{"name":"./domTree","loc":{"line":14,"column":22},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildHTML.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/domTree.js"},{"name":"./fontMetrics","loc":{"line":15,"column":26},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildHTML.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/fontMetrics.js"},{"name":"./utils","loc":{"line":16,"column":20},"parent":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/buildHTML.js","resolved":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/src/utils.js"}],"generated":{"js":"/* eslint no-console:0 */\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupTypes functions are\n * called, to produce a final HTML tree.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar delimiter = require(\"./delimiter\");\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. This function handles the `prev` node correctly, and passes the\n * previous element from the list as the prev of the next element.\n */\nvar buildExpression = function(expression, options, prev) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options, prev));\n        prev = group;\n    }\n    return groups;\n};\n\n// List of types used by getTypeOfGroup,\n// see https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\nvar groupToType = {\n    mathord: \"mord\",\n    textord: \"mord\",\n    bin: \"mbin\",\n    rel: \"mrel\",\n    text: \"mord\",\n    open: \"mopen\",\n    close: \"mclose\",\n    inner: \"minner\",\n    genfrac: \"mord\",\n    array: \"mord\",\n    spacing: \"mord\",\n    punct: \"mpunct\",\n    ordgroup: \"mord\",\n    op: \"mop\",\n    katex: \"mord\",\n    overline: \"mord\",\n    underline: \"mord\",\n    rule: \"mord\",\n    leftright: \"minner\",\n    sqrt: \"mord\",\n    accent: \"mord\",\n};\n\n/**\n * Gets the final math type of an expression, given its group type. This type is\n * used to determine spacing between elements, and affects bin elements by\n * causing them to change depending on what types are around them. This type\n * must be attached to the outermost node of an element as a CSS class so that\n * spacing with its surrounding elements works correctly.\n *\n * Some elements can be mapped one-to-one from group type to math type, and\n * those are listed in the `groupToType` table.\n *\n * Others (usually elements that wrap around other elements) often have\n * recursive definitions, and thus call `getTypeOfGroup` on their inner\n * elements.\n */\nvar getTypeOfGroup = function(group) {\n    if (group == null) {\n        // Like when typesetting $^3$\n        return groupToType.mathord;\n    } else if (group.type === \"supsub\") {\n        return getTypeOfGroup(group.value.base);\n    } else if (group.type === \"llap\" || group.type === \"rlap\") {\n        return getTypeOfGroup(group.value);\n    } else if (group.type === \"color\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"sizing\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"styling\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"delimsizing\") {\n        return groupToType[group.value.delimType];\n    } else {\n        return groupToType[group.type];\n    }\n};\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar shouldHandleSupSub = function(group, options) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"op\") {\n        // Operators handle supsubs differently when they have limits\n        // (e.g. `\\displaystyle\\sum_2^3`)\n        return group.value.limits &&\n            (options.style.size === Style.DISPLAY.size ||\n            group.value.alwaysHandleSupSub);\n    } else if (group.type === \"accent\") {\n        return isCharacterBox(group.value.base);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function(group) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"ordgroup\") {\n        if (group.value.length === 1) {\n            return getBaseElem(group.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.value.value.length === 1) {\n            return getBaseElem(group.value.value[0]);\n        } else {\n            return group;\n        }\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar isCharacterBox = function(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" ||\n        baseElem.type === \"textord\" ||\n        baseElem.type === \"bin\" ||\n        baseElem.type === \"rel\" ||\n        baseElem.type === \"inner\" ||\n        baseElem.type === \"open\" ||\n        baseElem.type === \"close\" ||\n        baseElem.type === \"punct\";\n};\n\nvar makeNullDelimiter = function(options) {\n    return makeSpan([\n        \"sizing\", \"reset-\" + options.size, \"size5\",\n        options.style.reset(), Style.TEXT.cls(),\n        \"nulldelimiter\",\n    ]);\n};\n\n/**\n * This is a map of group types to the function used to handle that type.\n * Simpler types come at the beginning, while complicated types come afterwards.\n */\nvar groupTypes = {};\n\ngroupTypes.mathord = function(group, options, prev) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n};\n\ngroupTypes.textord = function(group, options, prev) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n};\n\ngroupTypes.bin = function(group, options, prev) {\n    var className = \"mbin\";\n    // Pull out the most recent element. Do some special handling to find\n    // things at the end of a \\color group. Note that we don't use the same\n    // logic for ordgroups (which count as ords).\n    var prevAtom = prev;\n    while (prevAtom && prevAtom.type === \"color\") {\n        var atoms = prevAtom.value.value;\n        prevAtom = atoms[atoms.length - 1];\n    }\n    // See TeXbook pg. 442-446, Rules 5 and 6, and the text before Rule 19.\n    // Here, we determine whether the bin should turn into an ord. We\n    // currently only apply Rule 5.\n    if (!prev || utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"],\n            getTypeOfGroup(prevAtom))) {\n        group.type = \"textord\";\n        className = \"mord\";\n    }\n\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [className]);\n};\n\ngroupTypes.rel = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mrel\"]);\n};\n\ngroupTypes.open = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mopen\"]);\n};\n\ngroupTypes.close = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mclose\"]);\n};\n\ngroupTypes.inner = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"minner\"]);\n};\n\ngroupTypes.punct = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mpunct\"]);\n};\n\ngroupTypes.ordgroup = function(group, options, prev) {\n    return makeSpan(\n        [\"mord\", options.style.cls()],\n        buildExpression(group.value, options.reset())\n    );\n};\n\ngroupTypes.text = function(group, options, prev) {\n    return makeSpan([\"text\", \"mord\", options.style.cls()],\n        buildExpression(group.value.body, options.reset()));\n};\n\ngroupTypes.color = function(group, options, prev) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withColor(group.value.color),\n        prev\n    );\n\n    // \\color isn't supposed to affect the type of the elements it contains.\n    // To accomplish this, we wrap the results in a fragment, so the inner\n    // elements will be able to directly interact with their neighbors. For\n    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n    return new buildCommon.makeFragment(elements);\n};\n\ngroupTypes.supsub = function(group, options, prev) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    if (shouldHandleSupSub(group.value.base, options)) {\n        return groupTypes[group.value.base.type](group, options, prev);\n    }\n\n    var base = buildGroup(group.value.base, options.reset());\n    var supmid;\n    var submid;\n    var sup;\n    var sub;\n\n    if (group.value.sup) {\n        sup = buildGroup(group.value.sup,\n                options.withStyle(options.style.sup()));\n        supmid = makeSpan(\n                [options.style.reset(), options.style.sup().cls()], [sup]);\n    }\n\n    if (group.value.sub) {\n        sub = buildGroup(group.value.sub,\n                options.withStyle(options.style.sub()));\n        submid = makeSpan(\n                [options.style.reset(), options.style.sub().cls()], [sub]);\n    }\n\n    // Rule 18a\n    var supShift;\n    var subShift;\n    if (isCharacterBox(group.value.base)) {\n        supShift = 0;\n        subShift = 0;\n    } else {\n        supShift = base.height - fontMetrics.metrics.supDrop;\n        subShift = base.depth + fontMetrics.metrics.subDrop;\n    }\n\n    // Rule 18c\n    var minSupShift;\n    if (options.style === Style.DISPLAY) {\n        minSupShift = fontMetrics.metrics.sup1;\n    } else if (options.style.cramped) {\n        minSupShift = fontMetrics.metrics.sup3;\n    } else {\n        minSupShift = fontMetrics.metrics.sup2;\n    }\n\n    // scriptspace is a font-size-independent size, so scale it\n    // appropriately\n    var multiplier = Style.TEXT.sizeMultiplier *\n            options.style.sizeMultiplier;\n    var scriptspace =\n        (0.5 / fontMetrics.metrics.ptPerEm) / multiplier + \"em\";\n\n    var supsub;\n    if (!group.value.sup) {\n        // Rule 18b\n        subShift = Math.max(\n            subShift, fontMetrics.metrics.sub1,\n            sub.height - 0.8 * fontMetrics.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid},\n        ], \"shift\", subShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n\n        // Subscripts shouldn't be shifted by the base's italic correction.\n        // Account for that by shifting the subscript back the appropriate\n        // amount. Note we only do this when the base is a single symbol.\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n    } else if (!group.value.sub) {\n        // Rule 18c, d\n        supShift = Math.max(supShift, minSupShift,\n            sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: supmid},\n        ], \"shift\", -supShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n    } else {\n        supShift = Math.max(\n            supShift, minSupShift,\n            sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n        subShift = Math.max(subShift, fontMetrics.metrics.sub2);\n\n        var ruleWidth = fontMetrics.metrics.defaultRuleThickness;\n\n        // Rule 18e\n        if ((supShift - sup.depth) - (sub.height - subShift) <\n                4 * ruleWidth) {\n            subShift = 4 * ruleWidth - (supShift - sup.depth) + sub.height;\n            var psi = 0.8 * fontMetrics.metrics.xHeight -\n                (supShift - sup.depth);\n            if (psi > 0) {\n                supShift += psi;\n                subShift -= psi;\n            }\n        }\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid, shift: subShift},\n            {type: \"elem\", elem: supmid, shift: -supShift},\n        ], \"individualShift\", null, options);\n\n        // See comment above about subscripts not being shifted\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n\n        supsub.children[0].style.marginRight = scriptspace;\n        supsub.children[1].style.marginRight = scriptspace;\n    }\n\n    return makeSpan([getTypeOfGroup(group.value.base)],\n        [base, supsub]);\n};\n\ngroupTypes.genfrac = function(group, options, prev) {\n    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n    // Figure out what style this fraction should be in based on the\n    // function used\n    var fstyle = options.style;\n    if (group.value.size === \"display\") {\n        fstyle = Style.DISPLAY;\n    } else if (group.value.size === \"text\") {\n        fstyle = Style.TEXT;\n    }\n\n    var nstyle = fstyle.fracNum();\n    var dstyle = fstyle.fracDen();\n\n    var numer = buildGroup(group.value.numer, options.withStyle(nstyle));\n    var numerreset = makeSpan([fstyle.reset(), nstyle.cls()], [numer]);\n\n    var denom = buildGroup(group.value.denom, options.withStyle(dstyle));\n    var denomreset = makeSpan([fstyle.reset(), dstyle.cls()], [denom]);\n\n    var ruleWidth;\n    if (group.value.hasBarLine) {\n        ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n            options.style.sizeMultiplier;\n    } else {\n        ruleWidth = 0;\n    }\n\n    // Rule 15b\n    var numShift;\n    var clearance;\n    var denomShift;\n    if (fstyle.size === Style.DISPLAY.size) {\n        numShift = fontMetrics.metrics.num1;\n        if (ruleWidth > 0) {\n            clearance = 3 * ruleWidth;\n        } else {\n            clearance = 7 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = fontMetrics.metrics.denom1;\n    } else {\n        if (ruleWidth > 0) {\n            numShift = fontMetrics.metrics.num2;\n            clearance = ruleWidth;\n        } else {\n            numShift = fontMetrics.metrics.num3;\n            clearance = 3 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = fontMetrics.metrics.denom2;\n    }\n\n    var frac;\n    if (ruleWidth === 0) {\n        // Rule 15c\n        var candiateClearance =\n            (numShift - numer.depth) - (denom.height - denomShift);\n        if (candiateClearance < clearance) {\n            numShift += 0.5 * (clearance - candiateClearance);\n            denomShift += 0.5 * (clearance - candiateClearance);\n        }\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift},\n        ], \"individualShift\", null, options);\n    } else {\n        // Rule 15d\n        var axisHeight = fontMetrics.metrics.axisHeight;\n\n        if ((numShift - numer.depth) - (axisHeight + 0.5 * ruleWidth) <\n                clearance) {\n            numShift +=\n                clearance - ((numShift - numer.depth) -\n                             (axisHeight + 0.5 * ruleWidth));\n        }\n\n        if ((axisHeight - 0.5 * ruleWidth) - (denom.height - denomShift) <\n                clearance) {\n            denomShift +=\n                clearance - ((axisHeight - 0.5 * ruleWidth) -\n                             (denom.height - denomShift));\n        }\n\n        var mid = makeSpan(\n            [options.style.reset(), Style.TEXT.cls(), \"frac-line\"]);\n        // Manually set the height of the line because its height is\n        // created in CSS\n        mid.height = ruleWidth;\n\n        var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: mid,        shift: midShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift},\n        ], \"individualShift\", null, options);\n    }\n\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n    // account for the possible size change here.\n    frac.height *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n    frac.depth *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n\n    // Rule 15e\n    var delimSize;\n    if (fstyle.size === Style.DISPLAY.size) {\n        delimSize = fontMetrics.metrics.delim1;\n    } else {\n        delimSize = fontMetrics.metrics.getDelim2(fstyle);\n    }\n\n    var leftDelim;\n    var rightDelim;\n    if (group.value.leftDelim == null) {\n        leftDelim = makeNullDelimiter(options);\n    } else {\n        leftDelim = delimiter.customSizedDelim(\n            group.value.leftDelim, delimSize, true,\n            options.withStyle(fstyle), group.mode);\n    }\n    if (group.value.rightDelim == null) {\n        rightDelim = makeNullDelimiter(options);\n    } else {\n        rightDelim = delimiter.customSizedDelim(\n            group.value.rightDelim, delimSize, true,\n            options.withStyle(fstyle), group.mode);\n    }\n\n    return makeSpan(\n        [\"mord\", options.style.reset(), fstyle.cls()],\n        [leftDelim, makeSpan([\"mfrac\"], [frac]), rightDelim],\n        options.getColor());\n};\n\ngroupTypes.array = function(group, options, prev) {\n    var r;\n    var c;\n    var nr = group.value.body.length;\n    var nc = 0;\n    var body = new Array(nr);\n\n    // Horizontal spacing\n    var pt = 1 / fontMetrics.metrics.ptPerEm;\n    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n    // Vertical spacing\n    var baselineskip = 12 * pt; // see size10.clo\n    // Default \\arraystretch from lttab.dtx\n    // TODO(gagern): may get redefined once we have user-defined macros\n    var arraystretch = utils.deflt(group.value.arraystretch, 1);\n    var arrayskip = arraystretch * baselineskip;\n    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n    var arstrutDepth = 0.3 * arrayskip;  // \\@arstrutbox in lttab.dtx\n\n    var totalHeight = 0;\n    for (r = 0; r < group.value.body.length; ++r) {\n        var inrow = group.value.body[r];\n        var height = arstrutHeight; // \\@array adds an \\@arstrut\n        var depth = arstrutDepth;   // to each tow (via the template)\n\n        if (nc < inrow.length) {\n            nc = inrow.length;\n        }\n\n        var outrow = new Array(inrow.length);\n        for (c = 0; c < inrow.length; ++c) {\n            var elt = buildGroup(inrow[c], options);\n            if (depth < elt.depth) {\n                depth = elt.depth;\n            }\n            if (height < elt.height) {\n                height = elt.height;\n            }\n            outrow[c] = elt;\n        }\n\n        var gap = 0;\n        if (group.value.rowGaps[r]) {\n            gap = group.value.rowGaps[r].value;\n            switch (gap.unit) {\n                case \"em\":\n                    gap = gap.number;\n                    break;\n                case \"ex\":\n                    gap = gap.number * fontMetrics.metrics.emPerEx;\n                    break;\n                default:\n                    console.error(\"Can't handle unit \" + gap.unit);\n                    gap = 0;\n            }\n            if (gap > 0) { // \\@argarraycr\n                gap += arstrutDepth;\n                if (depth < gap) {\n                    depth = gap; // \\@xargarraycr\n                }\n                gap = 0;\n            }\n        }\n\n        outrow.height = height;\n        outrow.depth = depth;\n        totalHeight += height;\n        outrow.pos = totalHeight;\n        totalHeight += depth + gap; // \\@yargarraycr\n        body[r] = outrow;\n    }\n\n    var offset = totalHeight / 2 + fontMetrics.metrics.axisHeight;\n    var colDescriptions = group.value.cols || [];\n    var cols = [];\n    var colSep;\n    var colDescrNum;\n    for (c = 0, colDescrNum = 0;\n         // Continue while either there are more columns or more column\n         // descriptions, so trailing separators don't get lost.\n         c < nc || colDescrNum < colDescriptions.length;\n         ++c, ++colDescrNum) {\n\n        var colDescr = colDescriptions[colDescrNum] || {};\n\n        var firstSeparator = true;\n        while (colDescr.type === \"separator\") {\n            // If there is more than one separator in a row, add a space\n            // between them.\n            if (!firstSeparator) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width =\n                    fontMetrics.metrics.doubleRuleSep + \"em\";\n                cols.push(colSep);\n            }\n\n            if (colDescr.separator === \"|\") {\n                var separator = makeSpan(\n                    [\"vertical-separator\"],\n                    []);\n                separator.style.height = totalHeight + \"em\";\n                separator.style.verticalAlign =\n                    -(totalHeight - offset) + \"em\";\n\n                cols.push(separator);\n            } else {\n                throw new ParseError(\n                    \"Invalid separator type: \" + colDescr.separator);\n            }\n\n            colDescrNum++;\n            colDescr = colDescriptions[colDescrNum] || {};\n            firstSeparator = false;\n        }\n\n        if (c >= nc) {\n            continue;\n        }\n\n        var sepwidth;\n        if (c > 0 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n\n        var col = [];\n        for (r = 0; r < nr; ++r) {\n            var row = body[r];\n            var elem = row[c];\n            if (!elem) {\n                continue;\n            }\n            var shift = row.pos - offset;\n            elem.depth = row.depth;\n            elem.height = row.height;\n            col.push({type: \"elem\", elem: elem, shift: shift});\n        }\n\n        col = buildCommon.makeVList(col, \"individualShift\", null, options);\n        col = makeSpan(\n            [\"col-align-\" + (colDescr.align || \"c\")],\n            [col]);\n        cols.push(col);\n\n        if (c < nc - 1 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n    }\n    body = makeSpan([\"mtable\"], cols);\n    return makeSpan([\"mord\"], [body], options.getColor());\n};\n\ngroupTypes.spacing = function(group, options, prev) {\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n        group.value === \" \" || group.value === \"~\") {\n        // Spaces are generated by adding an actual space. Each of these\n        // things has an entry in the symbols table, so these will be turned\n        // into appropriate outputs.\n        return makeSpan(\n            [\"mord\", \"mspace\"],\n            [buildCommon.mathsym(group.value, group.mode)]\n        );\n    } else {\n        // Other kinds of spaces are of arbitrary width. We use CSS to\n        // generate these.\n        return makeSpan(\n            [\"mord\", \"mspace\",\n             buildCommon.spacingFunctions[group.value].className]);\n    }\n};\n\ngroupTypes.llap = function(group, options, prev) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"llap\", options.style.cls()], [inner, fix]);\n};\n\ngroupTypes.rlap = function(group, options, prev) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"rlap\", options.style.cls()], [inner, fix]);\n};\n\ngroupTypes.op = function(group, options, prev) {\n    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n    var supGroup;\n    var subGroup;\n    var hasLimits = false;\n    if (group.type === \"supsub\" ) {\n        // If we have limits, supsub will pass us its group to handle. Pull\n        // out the superscript and subscript and set the group to the op in\n        // its base.\n        supGroup = group.value.sup;\n        subGroup = group.value.sub;\n        group = group.value.base;\n        hasLimits = true;\n    }\n\n    // Most operators have a large successor symbol, but these don't.\n    var noSuccessor = [\n        \"\\\\smallint\",\n    ];\n\n    var large = false;\n    if (options.style.size === Style.DISPLAY.size &&\n        group.value.symbol &&\n        !utils.contains(noSuccessor, group.value.body)) {\n\n        // Most symbol operators get larger in displaystyle (rule 13)\n        large = true;\n    }\n\n    var base;\n    var baseShift = 0;\n    var slant = 0;\n    if (group.value.symbol) {\n        // If this is a symbol, create the symbol.\n        var style = large ? \"Size2-Regular\" : \"Size1-Regular\";\n        base = buildCommon.makeSymbol(\n            group.value.body, style, \"math\", options.getColor(),\n            [\"op-symbol\", large ? \"large-op\" : \"small-op\", \"mop\"]);\n\n        // Shift the symbol so its center lies on the axis (rule 13). It\n        // appears that our fonts have the centers of the symbols already\n        // almost on the axis, so these numbers are very small. Note we\n        // don't actually apply this here, but instead it is used either in\n        // the vlist creation or separately when there are no limits.\n        baseShift = (base.height - base.depth) / 2 -\n            fontMetrics.metrics.axisHeight *\n            options.style.sizeMultiplier;\n\n        // The slant of the symbol is just its italic correction.\n        slant = base.italic;\n    } else {\n        // Otherwise, this is a text operator. Build the text from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup\n        var output = [];\n        for (var i = 1; i < group.value.body.length; i++) {\n            output.push(buildCommon.mathsym(group.value.body[i], group.mode));\n        }\n        base = makeSpan([\"mop\"], output, options.getColor());\n    }\n\n    if (hasLimits) {\n        // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n        // in a new span so it is an inline, and works.\n        base = makeSpan([], [base]);\n\n        var supmid;\n        var supKern;\n        var submid;\n        var subKern;\n        // We manually have to handle the superscripts and subscripts. This,\n        // aside from the kern calculations, is copied from supsub.\n        if (supGroup) {\n            var sup = buildGroup(\n                supGroup, options.withStyle(options.style.sup()));\n            supmid = makeSpan(\n                [options.style.reset(), options.style.sup().cls()], [sup]);\n\n            supKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing1,\n                fontMetrics.metrics.bigOpSpacing3 - sup.depth);\n        }\n\n        if (subGroup) {\n            var sub = buildGroup(\n                subGroup, options.withStyle(options.style.sub()));\n            submid = makeSpan(\n                [options.style.reset(), options.style.sub().cls()],\n                [sub]);\n\n            subKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing2,\n                fontMetrics.metrics.bigOpSpacing4 - sub.height);\n        }\n\n        // Build the final group as a vlist of the possible subscript, base,\n        // and possible superscript.\n        var finalGroup;\n        var top;\n        var bottom;\n        if (!supGroup) {\n            top = base.height - baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n            ], \"top\", top, options);\n\n            // Here, we shift the limits by the slant of the symbol. Note\n            // that we are supposed to shift the limits by 1/2 of the slant,\n            // but since we are centering the limits adding a full slant of\n            // margin will shift by 1/2 that.\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n        } else if (!subGroup) {\n            bottom = base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[1].style.marginLeft = slant + \"em\";\n        } else if (!supGroup && !subGroup) {\n            // This case probably shouldn't occur (this would mean the\n            // supsub was sending us a group with no superscript or\n            // subscript) but be safe.\n            return base;\n        } else {\n            bottom = fontMetrics.metrics.bigOpSpacing5 +\n                submid.height + submid.depth +\n                subKern +\n                base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n            finalGroup.children[2].style.marginLeft = slant + \"em\";\n        }\n\n        return makeSpan([\"mop\", \"op-limits\"], [finalGroup]);\n    } else {\n        if (group.value.symbol) {\n            base.style.top = baseShift + \"em\";\n        }\n\n        return base;\n    }\n};\n\ngroupTypes.katex = function(group, options, prev) {\n    // The KaTeX logo. The offsets for the K and a were chosen to look\n    // good, but the offsets for the T, E, and X were taken from the\n    // definition of \\TeX in TeX (see TeXbook pg. 356)\n    var k = makeSpan(\n        [\"k\"], [buildCommon.mathsym(\"K\", group.mode)]);\n    var a = makeSpan(\n        [\"a\"], [buildCommon.mathsym(\"A\", group.mode)]);\n\n    a.height = (a.height + 0.2) * 0.75;\n    a.depth = (a.height - 0.2) * 0.75;\n\n    var t = makeSpan(\n        [\"t\"], [buildCommon.mathsym(\"T\", group.mode)]);\n    var e = makeSpan(\n        [\"e\"], [buildCommon.mathsym(\"E\", group.mode)]);\n\n    e.height = (e.height - 0.2155);\n    e.depth = (e.depth + 0.2155);\n\n    var x = makeSpan(\n        [\"x\"], [buildCommon.mathsym(\"X\", group.mode)]);\n\n    return makeSpan(\n        [\"katex-logo\", \"mord\"], [k, a, t, e, x], options.getColor());\n};\n\ngroupTypes.overline = function(group, options, prev) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup(group.value.body,\n            options.withStyle(options.style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"overline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"elem\", elem: innerGroup},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: ruleWidth},\n    ], \"firstBaseline\", null, options);\n\n    return makeSpan([\"overline\", \"mord\"], [vlist], options.getColor());\n};\n\ngroupTypes.underline = function(group, options, prev) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n\n    // Build the inner group.\n    var innerGroup = buildGroup(group.value.body, options);\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"underline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"kern\", size: ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: innerGroup},\n    ], \"top\", innerGroup.height, options);\n\n    return makeSpan([\"underline\", \"mord\"], [vlist], options.getColor());\n};\n\ngroupTypes.sqrt = function(group, options, prev) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup(group.value.body,\n            options.withStyle(options.style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"sqrt-line\"], [],\n        options.getColor());\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    var phi = ruleWidth;\n    if (options.style.id < Style.TEXT.id) {\n        phi = fontMetrics.metrics.xHeight;\n    }\n\n    // Calculate the clearance between the body and line\n    var lineClearance = ruleWidth + phi / 4;\n\n    var innerHeight =\n        (inner.height + inner.depth) * options.style.sizeMultiplier;\n    var minDelimiterHeight = innerHeight + lineClearance + ruleWidth;\n\n    // Create a \\surd delimiter of the required minimum size\n    var delim = makeSpan([\"sqrt-sign\"], [\n        delimiter.customSizedDelim(\"\\\\surd\", minDelimiterHeight,\n                                   false, options, group.mode)],\n                         options.getColor());\n\n    var delimDepth = (delim.height + delim.depth) - ruleWidth;\n\n    // Adjust the clearance based on the delimiter size\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n        lineClearance =\n            (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    }\n\n    // Shift the delimiter so that its top lines up with the top of the line\n    var delimShift = -(inner.height + lineClearance + ruleWidth) + delim.height;\n    delim.style.top = delimShift + \"em\";\n    delim.height -= delimShift;\n    delim.depth += delimShift;\n\n    // We add a special case here, because even when `inner` is empty, we\n    // still get a line. So, we use a simple heuristic to decide if we\n    // should omit the body entirely. (note this doesn't work for something\n    // like `\\sqrt{\\rlap{x}}`, but if someone is doing that they deserve for\n    // it not to work.\n    var body;\n    if (inner.height === 0 && inner.depth === 0) {\n        body = makeSpan();\n    } else {\n        body = buildCommon.makeVList([\n            {type: \"elem\", elem: inner},\n            {type: \"kern\", size: lineClearance},\n            {type: \"elem\", elem: line},\n            {type: \"kern\", size: ruleWidth},\n        ], \"firstBaseline\", null, options);\n    }\n\n    if (!group.value.index) {\n        return makeSpan([\"sqrt\", \"mord\"], [delim, body]);\n    } else {\n        // Handle the optional root index\n\n        // The index is always in scriptscript style\n        var root = buildGroup(\n            group.value.index,\n            options.withStyle(Style.SCRIPTSCRIPT));\n        var rootWrap = makeSpan(\n            [options.style.reset(), Style.SCRIPTSCRIPT.cls()],\n            [root]);\n\n        // Figure out the height and depth of the inner part\n        var innerRootHeight = Math.max(delim.height, body.height);\n        var innerRootDepth = Math.max(delim.depth, body.depth);\n\n        // The amount the index is shifted by. This is taken from the TeX\n        // source, in the definition of `\\r@@t`.\n        var toShift = 0.6 * (innerRootHeight - innerRootDepth);\n\n        // Build a VList with the superscript shifted up correctly\n        var rootVList = buildCommon.makeVList(\n            [{type: \"elem\", elem: rootWrap}],\n            \"shift\", -toShift, options);\n        // Add a class surrounding it so we can add on the appropriate\n        // kerning\n        var rootVListWrap = makeSpan([\"root\"], [rootVList]);\n\n        return makeSpan([\"sqrt\", \"mord\"], [rootVListWrap, delim, body]);\n    }\n};\n\ngroupTypes.sizing = function(group, options, prev) {\n    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n    // these functions inside of math expressions, so we do some special\n    // handling.\n    var inner = buildExpression(group.value.value,\n            options.withSize(group.value.size), prev);\n\n    var span = makeSpan([\"mord\"],\n        [makeSpan([\"sizing\", \"reset-\" + options.size, group.value.size,\n                   options.style.cls()],\n                  inner)]);\n\n    // Calculate the correct maxFontSize manually\n    var fontSize = buildCommon.sizingMultiplier[group.value.size];\n    span.maxFontSize = fontSize * options.style.sizeMultiplier;\n\n    return span;\n};\n\ngroupTypes.styling = function(group, options, prev) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n\n    // Figure out what style we're changing to.\n    var style = {\n        \"display\": Style.DISPLAY,\n        \"text\": Style.TEXT,\n        \"script\": Style.SCRIPT,\n        \"scriptscript\": Style.SCRIPTSCRIPT,\n    };\n\n    var newStyle = style[group.value.style];\n\n    // Build the inner expression in the new style.\n    var inner = buildExpression(\n        group.value.value, options.withStyle(newStyle), prev);\n\n    return makeSpan([options.style.reset(), newStyle.cls()], inner);\n};\n\ngroupTypes.font = function(group, options, prev) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font), prev);\n};\n\ngroupTypes.delimsizing = function(group, options, prev) {\n    var delim = group.value.value;\n\n    if (delim === \".\") {\n        // Empty delimiters still count as elements, even though they don't\n        // show anything.\n        return makeSpan([groupToType[group.value.delimType]]);\n    }\n\n    // Use delimiter.sizedDelim to generate the delimiter.\n    return makeSpan(\n        [groupToType[group.value.delimType]],\n        [delimiter.sizedDelim(\n            delim, group.value.size, options, group.mode)]);\n};\n\ngroupTypes.leftright = function(group, options, prev) {\n    // Build the inner expression\n    var inner = buildExpression(group.value.body, options.reset());\n\n    var innerHeight = 0;\n    var innerDepth = 0;\n\n    // Calculate its height and depth\n    for (var i = 0; i < inner.length; i++) {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n    }\n\n    // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n    innerHeight *= options.style.sizeMultiplier;\n    innerDepth *= options.style.sizeMultiplier;\n\n    var leftDelim;\n    if (group.value.left === \".\") {\n        // Empty delimiters in \\left and \\right make null delimiter spaces.\n        leftDelim = makeNullDelimiter(options);\n    } else {\n        // Otherwise, use leftRightDelim to generate the correct sized\n        // delimiter.\n        leftDelim = delimiter.leftRightDelim(\n            group.value.left, innerHeight, innerDepth, options,\n            group.mode);\n    }\n    // Add it to the beginning of the expression\n    inner.unshift(leftDelim);\n\n    var rightDelim;\n    // Same for the right delimiter\n    if (group.value.right === \".\") {\n        rightDelim = makeNullDelimiter(options);\n    } else {\n        rightDelim = delimiter.leftRightDelim(\n            group.value.right, innerHeight, innerDepth, options,\n            group.mode);\n    }\n    // Add it to the end of the expression.\n    inner.push(rightDelim);\n\n    return makeSpan(\n        [\"minner\", options.style.cls()], inner, options.getColor());\n};\n\ngroupTypes.rule = function(group, options, prev) {\n    // Make an empty span for the rule\n    var rule = makeSpan([\"mord\", \"rule\"], [], options.getColor());\n\n    // Calculate the shift, width, and height of the rule, and account for units\n    var shift = 0;\n    if (group.value.shift) {\n        shift = group.value.shift.number;\n        if (group.value.shift.unit === \"ex\") {\n            shift *= fontMetrics.metrics.xHeight;\n        }\n    }\n\n    var width = group.value.width.number;\n    if (group.value.width.unit === \"ex\") {\n        width *= fontMetrics.metrics.xHeight;\n    }\n\n    var height = group.value.height.number;\n    if (group.value.height.unit === \"ex\") {\n        height *= fontMetrics.metrics.xHeight;\n    }\n\n    // The sizes of rules are absolute, so make it larger if we are in a\n    // smaller style.\n    shift /= options.style.sizeMultiplier;\n    width /= options.style.sizeMultiplier;\n    height /= options.style.sizeMultiplier;\n\n    // Style the rule to the right size\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\";\n\n    // Record the height and width\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift;\n\n    return rule;\n};\n\ngroupTypes.accent = function(group, options, prev) {\n    // Accents are handled in the TeXbook pg. 443, rule 12.\n    var base = group.value.base;\n\n    var supsubGroup;\n    if (group.type === \"supsub\") {\n        // If our base is a character box, and we have superscripts and\n        // subscripts, the supsub will defer to us. In particular, we want\n        // to attach the superscripts and subscripts to the inner body (so\n        // that the position of the superscripts and subscripts won't be\n        // affected by the height of the accent). We accomplish this by\n        // sticking the base of the accent into the base of the supsub, and\n        // rendering that, while keeping track of where the accent is.\n\n        // The supsub group is the group that was passed in\n        var supsub = group;\n        // The real accent group is the base of the supsub group\n        group = supsub.value.base;\n        // The character box is the base of the accent group\n        base = group.value.base;\n        // Stick the character box into the base of the supsub group\n        supsub.value.base = base;\n\n        // Rerender the supsub group with its new base, and store that\n        // result.\n        supsubGroup = buildGroup(\n            supsub, options.reset(), prev);\n    }\n\n    // Build the base group\n    var body = buildGroup(\n        base, options.withStyle(options.style.cramp()));\n\n    // Calculate the skew of the accent. This is based on the line \"If the\n    // nucleus is not a single character, let s = 0; otherwise set s to the\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\n    // Note that our skew metrics are just the kern between each character\n    // and the skewchar.\n    var skew;\n    if (isCharacterBox(base)) {\n        // If the base is a character box, then we want the skew of the\n        // innermost character. To do that, we find the innermost character:\n        var baseChar = getBaseElem(base);\n        // Then, we render its group to get the symbol inside it\n        var baseGroup = buildGroup(\n            baseChar, options.withStyle(options.style.cramp()));\n        // Finally, we pull the skew off of the symbol.\n        skew = baseGroup.skew;\n        // Note that we now throw away baseGroup, because the layers we\n        // removed with getBaseElem might contain things like \\color which\n        // we can't get rid of.\n        // TODO(emily): Find a better way to get the skew\n    } else {\n        skew = 0;\n    }\n\n    // calculate the amount of space between the body and the accent\n    var clearance = Math.min(body.height, fontMetrics.metrics.xHeight);\n\n    // Build the accent\n    var accent = buildCommon.makeSymbol(\n        group.value.accent, \"Main-Regular\", \"math\", options.getColor());\n    // Remove the italic correction of the accent, because it only serves to\n    // shift the accent over to a place we don't want.\n    accent.italic = 0;\n\n    // The \\vec character that the fonts use is a combining character, and\n    // thus shows up much too far to the left. To account for this, we add a\n    // specific class which shifts the accent over to where we want it.\n    // TODO(emily): Fix this in a better way, like by changing the font\n    var vecClass = group.value.accent === \"\\\\vec\" ? \"accent-vec\" : null;\n\n    var accentBody = makeSpan([\"accent-body\", vecClass], [\n        makeSpan([], [accent])]);\n\n    accentBody = buildCommon.makeVList([\n        {type: \"elem\", elem: body},\n        {type: \"kern\", size: -clearance},\n        {type: \"elem\", elem: accentBody},\n    ], \"firstBaseline\", null, options);\n\n    // Shift the accent over by the skew. Note we shift by twice the skew\n    // because we are centering the accent, so by adding 2*skew to the left,\n    // we shift it to the right by 1*skew.\n    accentBody.children[1].style.marginLeft = 2 * skew + \"em\";\n\n    var accentWrap = makeSpan([\"mord\", \"accent\"], [accentBody]);\n\n    if (supsubGroup) {\n        // Here, we replace the \"base\" child of the supsub with our newly\n        // generated accent.\n        supsubGroup.children[0] = accentWrap;\n\n        // Since we don't rerun the height calculation after replacing the\n        // accent, we manually recalculate height.\n        supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height);\n\n        // Accents should always be ords, even when their innards are not.\n        supsubGroup.classes[0] = \"mord\";\n\n        return supsubGroup;\n    } else {\n        return accentWrap;\n    }\n};\n\ngroupTypes.phantom = function(group, options, prev) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withPhantom(),\n        prev\n    );\n\n    // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n    return new buildCommon.makeFragment(elements);\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildGroup = function(group, options, prev) {\n    if (!group) {\n        return makeSpan();\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        var groupNode = groupTypes[group.type](group, options, prev);\n        var multiplier;\n\n        // If the style changed between the parent and the current group,\n        // account for the size difference\n        if (options.style !== options.parentStyle) {\n            multiplier = options.style.sizeMultiplier /\n                    options.parentStyle.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (options.size !== options.parentSize) {\n            multiplier = buildCommon.sizingMultiplier[options.size] /\n                    buildCommon.sizingMultiplier[options.parentSize];\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nvar buildHTML = function(tree, options) {\n    // buildExpression is destructive, so we need to make a clone\n    // of the incoming tree so that it isn't accidentally changed\n    tree = JSON.parse(JSON.stringify(tree));\n\n    // Build the expression contained in the tree\n    var expression = buildExpression(tree, options);\n    var body = makeSpan([\"base\", options.style.cls()], expression);\n\n    // Add struts, which ensure that the top of the HTML element falls at the\n    // height of the expression, and the bottom of the HTML element falls at the\n    // depth of the expression.\n    var topStrut = makeSpan([\"strut\"]);\n    var bottomStrut = makeSpan([\"strut\", \"bottom\"]);\n\n    topStrut.style.height = body.height + \"em\";\n    bottomStrut.style.height = (body.height + body.depth) + \"em\";\n    // We'd like to use `vertical-align: top` but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead staying in the\n    // normal place) so we use an absolute value for vertical-align instead\n    bottomStrut.style.verticalAlign = -body.depth + \"em\";\n\n    // Wrap the struts and body together\n    var htmlNode = makeSpan([\"katex-html\"], [topStrut, bottomStrut, body]);\n\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    return htmlNode;\n};\n\nmodule.exports = buildHTML;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/katex/src/buildHTML.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}}],"sources":{"../node_modules/katex/src/buildHTML.js":"/* eslint no-console:0 */\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupTypes functions are\n * called, to produce a final HTML tree.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar delimiter = require(\"./delimiter\");\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. This function handles the `prev` node correctly, and passes the\n * previous element from the list as the prev of the next element.\n */\nvar buildExpression = function(expression, options, prev) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options, prev));\n        prev = group;\n    }\n    return groups;\n};\n\n// List of types used by getTypeOfGroup,\n// see https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\nvar groupToType = {\n    mathord: \"mord\",\n    textord: \"mord\",\n    bin: \"mbin\",\n    rel: \"mrel\",\n    text: \"mord\",\n    open: \"mopen\",\n    close: \"mclose\",\n    inner: \"minner\",\n    genfrac: \"mord\",\n    array: \"mord\",\n    spacing: \"mord\",\n    punct: \"mpunct\",\n    ordgroup: \"mord\",\n    op: \"mop\",\n    katex: \"mord\",\n    overline: \"mord\",\n    underline: \"mord\",\n    rule: \"mord\",\n    leftright: \"minner\",\n    sqrt: \"mord\",\n    accent: \"mord\",\n};\n\n/**\n * Gets the final math type of an expression, given its group type. This type is\n * used to determine spacing between elements, and affects bin elements by\n * causing them to change depending on what types are around them. This type\n * must be attached to the outermost node of an element as a CSS class so that\n * spacing with its surrounding elements works correctly.\n *\n * Some elements can be mapped one-to-one from group type to math type, and\n * those are listed in the `groupToType` table.\n *\n * Others (usually elements that wrap around other elements) often have\n * recursive definitions, and thus call `getTypeOfGroup` on their inner\n * elements.\n */\nvar getTypeOfGroup = function(group) {\n    if (group == null) {\n        // Like when typesetting $^3$\n        return groupToType.mathord;\n    } else if (group.type === \"supsub\") {\n        return getTypeOfGroup(group.value.base);\n    } else if (group.type === \"llap\" || group.type === \"rlap\") {\n        return getTypeOfGroup(group.value);\n    } else if (group.type === \"color\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"sizing\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"styling\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"delimsizing\") {\n        return groupToType[group.value.delimType];\n    } else {\n        return groupToType[group.type];\n    }\n};\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar shouldHandleSupSub = function(group, options) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"op\") {\n        // Operators handle supsubs differently when they have limits\n        // (e.g. `\\displaystyle\\sum_2^3`)\n        return group.value.limits &&\n            (options.style.size === Style.DISPLAY.size ||\n            group.value.alwaysHandleSupSub);\n    } else if (group.type === \"accent\") {\n        return isCharacterBox(group.value.base);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function(group) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"ordgroup\") {\n        if (group.value.length === 1) {\n            return getBaseElem(group.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.value.value.length === 1) {\n            return getBaseElem(group.value.value[0]);\n        } else {\n            return group;\n        }\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar isCharacterBox = function(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" ||\n        baseElem.type === \"textord\" ||\n        baseElem.type === \"bin\" ||\n        baseElem.type === \"rel\" ||\n        baseElem.type === \"inner\" ||\n        baseElem.type === \"open\" ||\n        baseElem.type === \"close\" ||\n        baseElem.type === \"punct\";\n};\n\nvar makeNullDelimiter = function(options) {\n    return makeSpan([\n        \"sizing\", \"reset-\" + options.size, \"size5\",\n        options.style.reset(), Style.TEXT.cls(),\n        \"nulldelimiter\",\n    ]);\n};\n\n/**\n * This is a map of group types to the function used to handle that type.\n * Simpler types come at the beginning, while complicated types come afterwards.\n */\nvar groupTypes = {};\n\ngroupTypes.mathord = function(group, options, prev) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n};\n\ngroupTypes.textord = function(group, options, prev) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n};\n\ngroupTypes.bin = function(group, options, prev) {\n    var className = \"mbin\";\n    // Pull out the most recent element. Do some special handling to find\n    // things at the end of a \\color group. Note that we don't use the same\n    // logic for ordgroups (which count as ords).\n    var prevAtom = prev;\n    while (prevAtom && prevAtom.type === \"color\") {\n        var atoms = prevAtom.value.value;\n        prevAtom = atoms[atoms.length - 1];\n    }\n    // See TeXbook pg. 442-446, Rules 5 and 6, and the text before Rule 19.\n    // Here, we determine whether the bin should turn into an ord. We\n    // currently only apply Rule 5.\n    if (!prev || utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"],\n            getTypeOfGroup(prevAtom))) {\n        group.type = \"textord\";\n        className = \"mord\";\n    }\n\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [className]);\n};\n\ngroupTypes.rel = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mrel\"]);\n};\n\ngroupTypes.open = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mopen\"]);\n};\n\ngroupTypes.close = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mclose\"]);\n};\n\ngroupTypes.inner = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"minner\"]);\n};\n\ngroupTypes.punct = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mpunct\"]);\n};\n\ngroupTypes.ordgroup = function(group, options, prev) {\n    return makeSpan(\n        [\"mord\", options.style.cls()],\n        buildExpression(group.value, options.reset())\n    );\n};\n\ngroupTypes.text = function(group, options, prev) {\n    return makeSpan([\"text\", \"mord\", options.style.cls()],\n        buildExpression(group.value.body, options.reset()));\n};\n\ngroupTypes.color = function(group, options, prev) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withColor(group.value.color),\n        prev\n    );\n\n    // \\color isn't supposed to affect the type of the elements it contains.\n    // To accomplish this, we wrap the results in a fragment, so the inner\n    // elements will be able to directly interact with their neighbors. For\n    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n    return new buildCommon.makeFragment(elements);\n};\n\ngroupTypes.supsub = function(group, options, prev) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    if (shouldHandleSupSub(group.value.base, options)) {\n        return groupTypes[group.value.base.type](group, options, prev);\n    }\n\n    var base = buildGroup(group.value.base, options.reset());\n    var supmid;\n    var submid;\n    var sup;\n    var sub;\n\n    if (group.value.sup) {\n        sup = buildGroup(group.value.sup,\n                options.withStyle(options.style.sup()));\n        supmid = makeSpan(\n                [options.style.reset(), options.style.sup().cls()], [sup]);\n    }\n\n    if (group.value.sub) {\n        sub = buildGroup(group.value.sub,\n                options.withStyle(options.style.sub()));\n        submid = makeSpan(\n                [options.style.reset(), options.style.sub().cls()], [sub]);\n    }\n\n    // Rule 18a\n    var supShift;\n    var subShift;\n    if (isCharacterBox(group.value.base)) {\n        supShift = 0;\n        subShift = 0;\n    } else {\n        supShift = base.height - fontMetrics.metrics.supDrop;\n        subShift = base.depth + fontMetrics.metrics.subDrop;\n    }\n\n    // Rule 18c\n    var minSupShift;\n    if (options.style === Style.DISPLAY) {\n        minSupShift = fontMetrics.metrics.sup1;\n    } else if (options.style.cramped) {\n        minSupShift = fontMetrics.metrics.sup3;\n    } else {\n        minSupShift = fontMetrics.metrics.sup2;\n    }\n\n    // scriptspace is a font-size-independent size, so scale it\n    // appropriately\n    var multiplier = Style.TEXT.sizeMultiplier *\n            options.style.sizeMultiplier;\n    var scriptspace =\n        (0.5 / fontMetrics.metrics.ptPerEm) / multiplier + \"em\";\n\n    var supsub;\n    if (!group.value.sup) {\n        // Rule 18b\n        subShift = Math.max(\n            subShift, fontMetrics.metrics.sub1,\n            sub.height - 0.8 * fontMetrics.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid},\n        ], \"shift\", subShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n\n        // Subscripts shouldn't be shifted by the base's italic correction.\n        // Account for that by shifting the subscript back the appropriate\n        // amount. Note we only do this when the base is a single symbol.\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n    } else if (!group.value.sub) {\n        // Rule 18c, d\n        supShift = Math.max(supShift, minSupShift,\n            sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: supmid},\n        ], \"shift\", -supShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n    } else {\n        supShift = Math.max(\n            supShift, minSupShift,\n            sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n        subShift = Math.max(subShift, fontMetrics.metrics.sub2);\n\n        var ruleWidth = fontMetrics.metrics.defaultRuleThickness;\n\n        // Rule 18e\n        if ((supShift - sup.depth) - (sub.height - subShift) <\n                4 * ruleWidth) {\n            subShift = 4 * ruleWidth - (supShift - sup.depth) + sub.height;\n            var psi = 0.8 * fontMetrics.metrics.xHeight -\n                (supShift - sup.depth);\n            if (psi > 0) {\n                supShift += psi;\n                subShift -= psi;\n            }\n        }\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid, shift: subShift},\n            {type: \"elem\", elem: supmid, shift: -supShift},\n        ], \"individualShift\", null, options);\n\n        // See comment above about subscripts not being shifted\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n\n        supsub.children[0].style.marginRight = scriptspace;\n        supsub.children[1].style.marginRight = scriptspace;\n    }\n\n    return makeSpan([getTypeOfGroup(group.value.base)],\n        [base, supsub]);\n};\n\ngroupTypes.genfrac = function(group, options, prev) {\n    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n    // Figure out what style this fraction should be in based on the\n    // function used\n    var fstyle = options.style;\n    if (group.value.size === \"display\") {\n        fstyle = Style.DISPLAY;\n    } else if (group.value.size === \"text\") {\n        fstyle = Style.TEXT;\n    }\n\n    var nstyle = fstyle.fracNum();\n    var dstyle = fstyle.fracDen();\n\n    var numer = buildGroup(group.value.numer, options.withStyle(nstyle));\n    var numerreset = makeSpan([fstyle.reset(), nstyle.cls()], [numer]);\n\n    var denom = buildGroup(group.value.denom, options.withStyle(dstyle));\n    var denomreset = makeSpan([fstyle.reset(), dstyle.cls()], [denom]);\n\n    var ruleWidth;\n    if (group.value.hasBarLine) {\n        ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n            options.style.sizeMultiplier;\n    } else {\n        ruleWidth = 0;\n    }\n\n    // Rule 15b\n    var numShift;\n    var clearance;\n    var denomShift;\n    if (fstyle.size === Style.DISPLAY.size) {\n        numShift = fontMetrics.metrics.num1;\n        if (ruleWidth > 0) {\n            clearance = 3 * ruleWidth;\n        } else {\n            clearance = 7 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = fontMetrics.metrics.denom1;\n    } else {\n        if (ruleWidth > 0) {\n            numShift = fontMetrics.metrics.num2;\n            clearance = ruleWidth;\n        } else {\n            numShift = fontMetrics.metrics.num3;\n            clearance = 3 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = fontMetrics.metrics.denom2;\n    }\n\n    var frac;\n    if (ruleWidth === 0) {\n        // Rule 15c\n        var candiateClearance =\n            (numShift - numer.depth) - (denom.height - denomShift);\n        if (candiateClearance < clearance) {\n            numShift += 0.5 * (clearance - candiateClearance);\n            denomShift += 0.5 * (clearance - candiateClearance);\n        }\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift},\n        ], \"individualShift\", null, options);\n    } else {\n        // Rule 15d\n        var axisHeight = fontMetrics.metrics.axisHeight;\n\n        if ((numShift - numer.depth) - (axisHeight + 0.5 * ruleWidth) <\n                clearance) {\n            numShift +=\n                clearance - ((numShift - numer.depth) -\n                             (axisHeight + 0.5 * ruleWidth));\n        }\n\n        if ((axisHeight - 0.5 * ruleWidth) - (denom.height - denomShift) <\n                clearance) {\n            denomShift +=\n                clearance - ((axisHeight - 0.5 * ruleWidth) -\n                             (denom.height - denomShift));\n        }\n\n        var mid = makeSpan(\n            [options.style.reset(), Style.TEXT.cls(), \"frac-line\"]);\n        // Manually set the height of the line because its height is\n        // created in CSS\n        mid.height = ruleWidth;\n\n        var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: mid,        shift: midShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift},\n        ], \"individualShift\", null, options);\n    }\n\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n    // account for the possible size change here.\n    frac.height *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n    frac.depth *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n\n    // Rule 15e\n    var delimSize;\n    if (fstyle.size === Style.DISPLAY.size) {\n        delimSize = fontMetrics.metrics.delim1;\n    } else {\n        delimSize = fontMetrics.metrics.getDelim2(fstyle);\n    }\n\n    var leftDelim;\n    var rightDelim;\n    if (group.value.leftDelim == null) {\n        leftDelim = makeNullDelimiter(options);\n    } else {\n        leftDelim = delimiter.customSizedDelim(\n            group.value.leftDelim, delimSize, true,\n            options.withStyle(fstyle), group.mode);\n    }\n    if (group.value.rightDelim == null) {\n        rightDelim = makeNullDelimiter(options);\n    } else {\n        rightDelim = delimiter.customSizedDelim(\n            group.value.rightDelim, delimSize, true,\n            options.withStyle(fstyle), group.mode);\n    }\n\n    return makeSpan(\n        [\"mord\", options.style.reset(), fstyle.cls()],\n        [leftDelim, makeSpan([\"mfrac\"], [frac]), rightDelim],\n        options.getColor());\n};\n\ngroupTypes.array = function(group, options, prev) {\n    var r;\n    var c;\n    var nr = group.value.body.length;\n    var nc = 0;\n    var body = new Array(nr);\n\n    // Horizontal spacing\n    var pt = 1 / fontMetrics.metrics.ptPerEm;\n    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n    // Vertical spacing\n    var baselineskip = 12 * pt; // see size10.clo\n    // Default \\arraystretch from lttab.dtx\n    // TODO(gagern): may get redefined once we have user-defined macros\n    var arraystretch = utils.deflt(group.value.arraystretch, 1);\n    var arrayskip = arraystretch * baselineskip;\n    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n    var arstrutDepth = 0.3 * arrayskip;  // \\@arstrutbox in lttab.dtx\n\n    var totalHeight = 0;\n    for (r = 0; r < group.value.body.length; ++r) {\n        var inrow = group.value.body[r];\n        var height = arstrutHeight; // \\@array adds an \\@arstrut\n        var depth = arstrutDepth;   // to each tow (via the template)\n\n        if (nc < inrow.length) {\n            nc = inrow.length;\n        }\n\n        var outrow = new Array(inrow.length);\n        for (c = 0; c < inrow.length; ++c) {\n            var elt = buildGroup(inrow[c], options);\n            if (depth < elt.depth) {\n                depth = elt.depth;\n            }\n            if (height < elt.height) {\n                height = elt.height;\n            }\n            outrow[c] = elt;\n        }\n\n        var gap = 0;\n        if (group.value.rowGaps[r]) {\n            gap = group.value.rowGaps[r].value;\n            switch (gap.unit) {\n                case \"em\":\n                    gap = gap.number;\n                    break;\n                case \"ex\":\n                    gap = gap.number * fontMetrics.metrics.emPerEx;\n                    break;\n                default:\n                    console.error(\"Can't handle unit \" + gap.unit);\n                    gap = 0;\n            }\n            if (gap > 0) { // \\@argarraycr\n                gap += arstrutDepth;\n                if (depth < gap) {\n                    depth = gap; // \\@xargarraycr\n                }\n                gap = 0;\n            }\n        }\n\n        outrow.height = height;\n        outrow.depth = depth;\n        totalHeight += height;\n        outrow.pos = totalHeight;\n        totalHeight += depth + gap; // \\@yargarraycr\n        body[r] = outrow;\n    }\n\n    var offset = totalHeight / 2 + fontMetrics.metrics.axisHeight;\n    var colDescriptions = group.value.cols || [];\n    var cols = [];\n    var colSep;\n    var colDescrNum;\n    for (c = 0, colDescrNum = 0;\n         // Continue while either there are more columns or more column\n         // descriptions, so trailing separators don't get lost.\n         c < nc || colDescrNum < colDescriptions.length;\n         ++c, ++colDescrNum) {\n\n        var colDescr = colDescriptions[colDescrNum] || {};\n\n        var firstSeparator = true;\n        while (colDescr.type === \"separator\") {\n            // If there is more than one separator in a row, add a space\n            // between them.\n            if (!firstSeparator) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width =\n                    fontMetrics.metrics.doubleRuleSep + \"em\";\n                cols.push(colSep);\n            }\n\n            if (colDescr.separator === \"|\") {\n                var separator = makeSpan(\n                    [\"vertical-separator\"],\n                    []);\n                separator.style.height = totalHeight + \"em\";\n                separator.style.verticalAlign =\n                    -(totalHeight - offset) + \"em\";\n\n                cols.push(separator);\n            } else {\n                throw new ParseError(\n                    \"Invalid separator type: \" + colDescr.separator);\n            }\n\n            colDescrNum++;\n            colDescr = colDescriptions[colDescrNum] || {};\n            firstSeparator = false;\n        }\n\n        if (c >= nc) {\n            continue;\n        }\n\n        var sepwidth;\n        if (c > 0 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n\n        var col = [];\n        for (r = 0; r < nr; ++r) {\n            var row = body[r];\n            var elem = row[c];\n            if (!elem) {\n                continue;\n            }\n            var shift = row.pos - offset;\n            elem.depth = row.depth;\n            elem.height = row.height;\n            col.push({type: \"elem\", elem: elem, shift: shift});\n        }\n\n        col = buildCommon.makeVList(col, \"individualShift\", null, options);\n        col = makeSpan(\n            [\"col-align-\" + (colDescr.align || \"c\")],\n            [col]);\n        cols.push(col);\n\n        if (c < nc - 1 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n    }\n    body = makeSpan([\"mtable\"], cols);\n    return makeSpan([\"mord\"], [body], options.getColor());\n};\n\ngroupTypes.spacing = function(group, options, prev) {\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n        group.value === \" \" || group.value === \"~\") {\n        // Spaces are generated by adding an actual space. Each of these\n        // things has an entry in the symbols table, so these will be turned\n        // into appropriate outputs.\n        return makeSpan(\n            [\"mord\", \"mspace\"],\n            [buildCommon.mathsym(group.value, group.mode)]\n        );\n    } else {\n        // Other kinds of spaces are of arbitrary width. We use CSS to\n        // generate these.\n        return makeSpan(\n            [\"mord\", \"mspace\",\n             buildCommon.spacingFunctions[group.value].className]);\n    }\n};\n\ngroupTypes.llap = function(group, options, prev) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"llap\", options.style.cls()], [inner, fix]);\n};\n\ngroupTypes.rlap = function(group, options, prev) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"rlap\", options.style.cls()], [inner, fix]);\n};\n\ngroupTypes.op = function(group, options, prev) {\n    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n    var supGroup;\n    var subGroup;\n    var hasLimits = false;\n    if (group.type === \"supsub\" ) {\n        // If we have limits, supsub will pass us its group to handle. Pull\n        // out the superscript and subscript and set the group to the op in\n        // its base.\n        supGroup = group.value.sup;\n        subGroup = group.value.sub;\n        group = group.value.base;\n        hasLimits = true;\n    }\n\n    // Most operators have a large successor symbol, but these don't.\n    var noSuccessor = [\n        \"\\\\smallint\",\n    ];\n\n    var large = false;\n    if (options.style.size === Style.DISPLAY.size &&\n        group.value.symbol &&\n        !utils.contains(noSuccessor, group.value.body)) {\n\n        // Most symbol operators get larger in displaystyle (rule 13)\n        large = true;\n    }\n\n    var base;\n    var baseShift = 0;\n    var slant = 0;\n    if (group.value.symbol) {\n        // If this is a symbol, create the symbol.\n        var style = large ? \"Size2-Regular\" : \"Size1-Regular\";\n        base = buildCommon.makeSymbol(\n            group.value.body, style, \"math\", options.getColor(),\n            [\"op-symbol\", large ? \"large-op\" : \"small-op\", \"mop\"]);\n\n        // Shift the symbol so its center lies on the axis (rule 13). It\n        // appears that our fonts have the centers of the symbols already\n        // almost on the axis, so these numbers are very small. Note we\n        // don't actually apply this here, but instead it is used either in\n        // the vlist creation or separately when there are no limits.\n        baseShift = (base.height - base.depth) / 2 -\n            fontMetrics.metrics.axisHeight *\n            options.style.sizeMultiplier;\n\n        // The slant of the symbol is just its italic correction.\n        slant = base.italic;\n    } else {\n        // Otherwise, this is a text operator. Build the text from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup\n        var output = [];\n        for (var i = 1; i < group.value.body.length; i++) {\n            output.push(buildCommon.mathsym(group.value.body[i], group.mode));\n        }\n        base = makeSpan([\"mop\"], output, options.getColor());\n    }\n\n    if (hasLimits) {\n        // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n        // in a new span so it is an inline, and works.\n        base = makeSpan([], [base]);\n\n        var supmid;\n        var supKern;\n        var submid;\n        var subKern;\n        // We manually have to handle the superscripts and subscripts. This,\n        // aside from the kern calculations, is copied from supsub.\n        if (supGroup) {\n            var sup = buildGroup(\n                supGroup, options.withStyle(options.style.sup()));\n            supmid = makeSpan(\n                [options.style.reset(), options.style.sup().cls()], [sup]);\n\n            supKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing1,\n                fontMetrics.metrics.bigOpSpacing3 - sup.depth);\n        }\n\n        if (subGroup) {\n            var sub = buildGroup(\n                subGroup, options.withStyle(options.style.sub()));\n            submid = makeSpan(\n                [options.style.reset(), options.style.sub().cls()],\n                [sub]);\n\n            subKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing2,\n                fontMetrics.metrics.bigOpSpacing4 - sub.height);\n        }\n\n        // Build the final group as a vlist of the possible subscript, base,\n        // and possible superscript.\n        var finalGroup;\n        var top;\n        var bottom;\n        if (!supGroup) {\n            top = base.height - baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n            ], \"top\", top, options);\n\n            // Here, we shift the limits by the slant of the symbol. Note\n            // that we are supposed to shift the limits by 1/2 of the slant,\n            // but since we are centering the limits adding a full slant of\n            // margin will shift by 1/2 that.\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n        } else if (!subGroup) {\n            bottom = base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[1].style.marginLeft = slant + \"em\";\n        } else if (!supGroup && !subGroup) {\n            // This case probably shouldn't occur (this would mean the\n            // supsub was sending us a group with no superscript or\n            // subscript) but be safe.\n            return base;\n        } else {\n            bottom = fontMetrics.metrics.bigOpSpacing5 +\n                submid.height + submid.depth +\n                subKern +\n                base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n            finalGroup.children[2].style.marginLeft = slant + \"em\";\n        }\n\n        return makeSpan([\"mop\", \"op-limits\"], [finalGroup]);\n    } else {\n        if (group.value.symbol) {\n            base.style.top = baseShift + \"em\";\n        }\n\n        return base;\n    }\n};\n\ngroupTypes.katex = function(group, options, prev) {\n    // The KaTeX logo. The offsets for the K and a were chosen to look\n    // good, but the offsets for the T, E, and X were taken from the\n    // definition of \\TeX in TeX (see TeXbook pg. 356)\n    var k = makeSpan(\n        [\"k\"], [buildCommon.mathsym(\"K\", group.mode)]);\n    var a = makeSpan(\n        [\"a\"], [buildCommon.mathsym(\"A\", group.mode)]);\n\n    a.height = (a.height + 0.2) * 0.75;\n    a.depth = (a.height - 0.2) * 0.75;\n\n    var t = makeSpan(\n        [\"t\"], [buildCommon.mathsym(\"T\", group.mode)]);\n    var e = makeSpan(\n        [\"e\"], [buildCommon.mathsym(\"E\", group.mode)]);\n\n    e.height = (e.height - 0.2155);\n    e.depth = (e.depth + 0.2155);\n\n    var x = makeSpan(\n        [\"x\"], [buildCommon.mathsym(\"X\", group.mode)]);\n\n    return makeSpan(\n        [\"katex-logo\", \"mord\"], [k, a, t, e, x], options.getColor());\n};\n\ngroupTypes.overline = function(group, options, prev) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup(group.value.body,\n            options.withStyle(options.style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"overline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"elem\", elem: innerGroup},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: ruleWidth},\n    ], \"firstBaseline\", null, options);\n\n    return makeSpan([\"overline\", \"mord\"], [vlist], options.getColor());\n};\n\ngroupTypes.underline = function(group, options, prev) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n\n    // Build the inner group.\n    var innerGroup = buildGroup(group.value.body, options);\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"underline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"kern\", size: ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: innerGroup},\n    ], \"top\", innerGroup.height, options);\n\n    return makeSpan([\"underline\", \"mord\"], [vlist], options.getColor());\n};\n\ngroupTypes.sqrt = function(group, options, prev) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup(group.value.body,\n            options.withStyle(options.style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"sqrt-line\"], [],\n        options.getColor());\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    var phi = ruleWidth;\n    if (options.style.id < Style.TEXT.id) {\n        phi = fontMetrics.metrics.xHeight;\n    }\n\n    // Calculate the clearance between the body and line\n    var lineClearance = ruleWidth + phi / 4;\n\n    var innerHeight =\n        (inner.height + inner.depth) * options.style.sizeMultiplier;\n    var minDelimiterHeight = innerHeight + lineClearance + ruleWidth;\n\n    // Create a \\surd delimiter of the required minimum size\n    var delim = makeSpan([\"sqrt-sign\"], [\n        delimiter.customSizedDelim(\"\\\\surd\", minDelimiterHeight,\n                                   false, options, group.mode)],\n                         options.getColor());\n\n    var delimDepth = (delim.height + delim.depth) - ruleWidth;\n\n    // Adjust the clearance based on the delimiter size\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n        lineClearance =\n            (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    }\n\n    // Shift the delimiter so that its top lines up with the top of the line\n    var delimShift = -(inner.height + lineClearance + ruleWidth) + delim.height;\n    delim.style.top = delimShift + \"em\";\n    delim.height -= delimShift;\n    delim.depth += delimShift;\n\n    // We add a special case here, because even when `inner` is empty, we\n    // still get a line. So, we use a simple heuristic to decide if we\n    // should omit the body entirely. (note this doesn't work for something\n    // like `\\sqrt{\\rlap{x}}`, but if someone is doing that they deserve for\n    // it not to work.\n    var body;\n    if (inner.height === 0 && inner.depth === 0) {\n        body = makeSpan();\n    } else {\n        body = buildCommon.makeVList([\n            {type: \"elem\", elem: inner},\n            {type: \"kern\", size: lineClearance},\n            {type: \"elem\", elem: line},\n            {type: \"kern\", size: ruleWidth},\n        ], \"firstBaseline\", null, options);\n    }\n\n    if (!group.value.index) {\n        return makeSpan([\"sqrt\", \"mord\"], [delim, body]);\n    } else {\n        // Handle the optional root index\n\n        // The index is always in scriptscript style\n        var root = buildGroup(\n            group.value.index,\n            options.withStyle(Style.SCRIPTSCRIPT));\n        var rootWrap = makeSpan(\n            [options.style.reset(), Style.SCRIPTSCRIPT.cls()],\n            [root]);\n\n        // Figure out the height and depth of the inner part\n        var innerRootHeight = Math.max(delim.height, body.height);\n        var innerRootDepth = Math.max(delim.depth, body.depth);\n\n        // The amount the index is shifted by. This is taken from the TeX\n        // source, in the definition of `\\r@@t`.\n        var toShift = 0.6 * (innerRootHeight - innerRootDepth);\n\n        // Build a VList with the superscript shifted up correctly\n        var rootVList = buildCommon.makeVList(\n            [{type: \"elem\", elem: rootWrap}],\n            \"shift\", -toShift, options);\n        // Add a class surrounding it so we can add on the appropriate\n        // kerning\n        var rootVListWrap = makeSpan([\"root\"], [rootVList]);\n\n        return makeSpan([\"sqrt\", \"mord\"], [rootVListWrap, delim, body]);\n    }\n};\n\ngroupTypes.sizing = function(group, options, prev) {\n    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n    // these functions inside of math expressions, so we do some special\n    // handling.\n    var inner = buildExpression(group.value.value,\n            options.withSize(group.value.size), prev);\n\n    var span = makeSpan([\"mord\"],\n        [makeSpan([\"sizing\", \"reset-\" + options.size, group.value.size,\n                   options.style.cls()],\n                  inner)]);\n\n    // Calculate the correct maxFontSize manually\n    var fontSize = buildCommon.sizingMultiplier[group.value.size];\n    span.maxFontSize = fontSize * options.style.sizeMultiplier;\n\n    return span;\n};\n\ngroupTypes.styling = function(group, options, prev) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n\n    // Figure out what style we're changing to.\n    var style = {\n        \"display\": Style.DISPLAY,\n        \"text\": Style.TEXT,\n        \"script\": Style.SCRIPT,\n        \"scriptscript\": Style.SCRIPTSCRIPT,\n    };\n\n    var newStyle = style[group.value.style];\n\n    // Build the inner expression in the new style.\n    var inner = buildExpression(\n        group.value.value, options.withStyle(newStyle), prev);\n\n    return makeSpan([options.style.reset(), newStyle.cls()], inner);\n};\n\ngroupTypes.font = function(group, options, prev) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font), prev);\n};\n\ngroupTypes.delimsizing = function(group, options, prev) {\n    var delim = group.value.value;\n\n    if (delim === \".\") {\n        // Empty delimiters still count as elements, even though they don't\n        // show anything.\n        return makeSpan([groupToType[group.value.delimType]]);\n    }\n\n    // Use delimiter.sizedDelim to generate the delimiter.\n    return makeSpan(\n        [groupToType[group.value.delimType]],\n        [delimiter.sizedDelim(\n            delim, group.value.size, options, group.mode)]);\n};\n\ngroupTypes.leftright = function(group, options, prev) {\n    // Build the inner expression\n    var inner = buildExpression(group.value.body, options.reset());\n\n    var innerHeight = 0;\n    var innerDepth = 0;\n\n    // Calculate its height and depth\n    for (var i = 0; i < inner.length; i++) {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n    }\n\n    // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n    innerHeight *= options.style.sizeMultiplier;\n    innerDepth *= options.style.sizeMultiplier;\n\n    var leftDelim;\n    if (group.value.left === \".\") {\n        // Empty delimiters in \\left and \\right make null delimiter spaces.\n        leftDelim = makeNullDelimiter(options);\n    } else {\n        // Otherwise, use leftRightDelim to generate the correct sized\n        // delimiter.\n        leftDelim = delimiter.leftRightDelim(\n            group.value.left, innerHeight, innerDepth, options,\n            group.mode);\n    }\n    // Add it to the beginning of the expression\n    inner.unshift(leftDelim);\n\n    var rightDelim;\n    // Same for the right delimiter\n    if (group.value.right === \".\") {\n        rightDelim = makeNullDelimiter(options);\n    } else {\n        rightDelim = delimiter.leftRightDelim(\n            group.value.right, innerHeight, innerDepth, options,\n            group.mode);\n    }\n    // Add it to the end of the expression.\n    inner.push(rightDelim);\n\n    return makeSpan(\n        [\"minner\", options.style.cls()], inner, options.getColor());\n};\n\ngroupTypes.rule = function(group, options, prev) {\n    // Make an empty span for the rule\n    var rule = makeSpan([\"mord\", \"rule\"], [], options.getColor());\n\n    // Calculate the shift, width, and height of the rule, and account for units\n    var shift = 0;\n    if (group.value.shift) {\n        shift = group.value.shift.number;\n        if (group.value.shift.unit === \"ex\") {\n            shift *= fontMetrics.metrics.xHeight;\n        }\n    }\n\n    var width = group.value.width.number;\n    if (group.value.width.unit === \"ex\") {\n        width *= fontMetrics.metrics.xHeight;\n    }\n\n    var height = group.value.height.number;\n    if (group.value.height.unit === \"ex\") {\n        height *= fontMetrics.metrics.xHeight;\n    }\n\n    // The sizes of rules are absolute, so make it larger if we are in a\n    // smaller style.\n    shift /= options.style.sizeMultiplier;\n    width /= options.style.sizeMultiplier;\n    height /= options.style.sizeMultiplier;\n\n    // Style the rule to the right size\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\";\n\n    // Record the height and width\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift;\n\n    return rule;\n};\n\ngroupTypes.accent = function(group, options, prev) {\n    // Accents are handled in the TeXbook pg. 443, rule 12.\n    var base = group.value.base;\n\n    var supsubGroup;\n    if (group.type === \"supsub\") {\n        // If our base is a character box, and we have superscripts and\n        // subscripts, the supsub will defer to us. In particular, we want\n        // to attach the superscripts and subscripts to the inner body (so\n        // that the position of the superscripts and subscripts won't be\n        // affected by the height of the accent). We accomplish this by\n        // sticking the base of the accent into the base of the supsub, and\n        // rendering that, while keeping track of where the accent is.\n\n        // The supsub group is the group that was passed in\n        var supsub = group;\n        // The real accent group is the base of the supsub group\n        group = supsub.value.base;\n        // The character box is the base of the accent group\n        base = group.value.base;\n        // Stick the character box into the base of the supsub group\n        supsub.value.base = base;\n\n        // Rerender the supsub group with its new base, and store that\n        // result.\n        supsubGroup = buildGroup(\n            supsub, options.reset(), prev);\n    }\n\n    // Build the base group\n    var body = buildGroup(\n        base, options.withStyle(options.style.cramp()));\n\n    // Calculate the skew of the accent. This is based on the line \"If the\n    // nucleus is not a single character, let s = 0; otherwise set s to the\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\n    // Note that our skew metrics are just the kern between each character\n    // and the skewchar.\n    var skew;\n    if (isCharacterBox(base)) {\n        // If the base is a character box, then we want the skew of the\n        // innermost character. To do that, we find the innermost character:\n        var baseChar = getBaseElem(base);\n        // Then, we render its group to get the symbol inside it\n        var baseGroup = buildGroup(\n            baseChar, options.withStyle(options.style.cramp()));\n        // Finally, we pull the skew off of the symbol.\n        skew = baseGroup.skew;\n        // Note that we now throw away baseGroup, because the layers we\n        // removed with getBaseElem might contain things like \\color which\n        // we can't get rid of.\n        // TODO(emily): Find a better way to get the skew\n    } else {\n        skew = 0;\n    }\n\n    // calculate the amount of space between the body and the accent\n    var clearance = Math.min(body.height, fontMetrics.metrics.xHeight);\n\n    // Build the accent\n    var accent = buildCommon.makeSymbol(\n        group.value.accent, \"Main-Regular\", \"math\", options.getColor());\n    // Remove the italic correction of the accent, because it only serves to\n    // shift the accent over to a place we don't want.\n    accent.italic = 0;\n\n    // The \\vec character that the fonts use is a combining character, and\n    // thus shows up much too far to the left. To account for this, we add a\n    // specific class which shifts the accent over to where we want it.\n    // TODO(emily): Fix this in a better way, like by changing the font\n    var vecClass = group.value.accent === \"\\\\vec\" ? \"accent-vec\" : null;\n\n    var accentBody = makeSpan([\"accent-body\", vecClass], [\n        makeSpan([], [accent])]);\n\n    accentBody = buildCommon.makeVList([\n        {type: \"elem\", elem: body},\n        {type: \"kern\", size: -clearance},\n        {type: \"elem\", elem: accentBody},\n    ], \"firstBaseline\", null, options);\n\n    // Shift the accent over by the skew. Note we shift by twice the skew\n    // because we are centering the accent, so by adding 2*skew to the left,\n    // we shift it to the right by 1*skew.\n    accentBody.children[1].style.marginLeft = 2 * skew + \"em\";\n\n    var accentWrap = makeSpan([\"mord\", \"accent\"], [accentBody]);\n\n    if (supsubGroup) {\n        // Here, we replace the \"base\" child of the supsub with our newly\n        // generated accent.\n        supsubGroup.children[0] = accentWrap;\n\n        // Since we don't rerun the height calculation after replacing the\n        // accent, we manually recalculate height.\n        supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height);\n\n        // Accents should always be ords, even when their innards are not.\n        supsubGroup.classes[0] = \"mord\";\n\n        return supsubGroup;\n    } else {\n        return accentWrap;\n    }\n};\n\ngroupTypes.phantom = function(group, options, prev) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withPhantom(),\n        prev\n    );\n\n    // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n    return new buildCommon.makeFragment(elements);\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildGroup = function(group, options, prev) {\n    if (!group) {\n        return makeSpan();\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        var groupNode = groupTypes[group.type](group, options, prev);\n        var multiplier;\n\n        // If the style changed between the parent and the current group,\n        // account for the size difference\n        if (options.style !== options.parentStyle) {\n            multiplier = options.style.sizeMultiplier /\n                    options.parentStyle.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (options.size !== options.parentSize) {\n            multiplier = buildCommon.sizingMultiplier[options.size] /\n                    buildCommon.sizingMultiplier[options.parentSize];\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nvar buildHTML = function(tree, options) {\n    // buildExpression is destructive, so we need to make a clone\n    // of the incoming tree so that it isn't accidentally changed\n    tree = JSON.parse(JSON.stringify(tree));\n\n    // Build the expression contained in the tree\n    var expression = buildExpression(tree, options);\n    var body = makeSpan([\"base\", options.style.cls()], expression);\n\n    // Add struts, which ensure that the top of the HTML element falls at the\n    // height of the expression, and the bottom of the HTML element falls at the\n    // depth of the expression.\n    var topStrut = makeSpan([\"strut\"]);\n    var bottomStrut = makeSpan([\"strut\", \"bottom\"]);\n\n    topStrut.style.height = body.height + \"em\";\n    bottomStrut.style.height = (body.height + body.depth) + \"em\";\n    // We'd like to use `vertical-align: top` but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead staying in the\n    // normal place) so we use an absolute value for vertical-align instead\n    bottomStrut.style.verticalAlign = -body.depth + \"em\";\n\n    // Wrap the struts and body together\n    var htmlNode = makeSpan([\"katex-html\"], [topStrut, bottomStrut, body]);\n\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    return htmlNode;\n};\n\nmodule.exports = buildHTML;\n"},"lineCount":1403}},"error":null,"hash":"248961004c3d6d56db78294c26239a39","cacheData":{"env":{}}}
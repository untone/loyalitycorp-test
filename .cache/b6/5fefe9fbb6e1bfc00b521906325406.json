{"id":"../node_modules/markdown-it/lib/rules_block/lheading.js","dependencies":[{"name":"/Users/untone/Sites/loyalitycorp-test/package.json","includedInParent":true,"mtime":1557582570376},{"name":"/Users/untone/Sites/loyalitycorp-test/node_modules/markdown-it/package.json","includedInParent":true,"mtime":1557582566305}],"generated":{"js":"// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  return true;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/markdown-it/lib/rules_block/lheading.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}}],"sources":{"../node_modules/markdown-it/lib/rules_block/lheading.js":"// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  return true;\n};\n"},"lineCount":76}},"error":null,"hash":"b0418f01a8db9b95b1d9e0b945ddfc71","cacheData":{"env":{}}}
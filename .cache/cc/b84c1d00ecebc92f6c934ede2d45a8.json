{"id":"../node_modules/katex/src/Settings.js","dependencies":[{"name":"/Users/untone/Sites/loyalitycorp-test/package.json","includedInParent":true,"mtime":1557582570376},{"name":"/Users/untone/Sites/loyalitycorp-test/node_modules/katex/package.json","includedInParent":true,"mtime":1557582566587}],"generated":{"js":"/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n/**\n * Helper function for getting a default value if the value is undefined\n */\nfunction get(option, defaultValue) {\n    return option === undefined ? defaultValue : option;\n}\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset by default in\n *                 textstyle or displaystyle (default false)\n */\nfunction Settings(options) {\n    // allow null options\n    options = options || {};\n    this.displayMode = get(options.displayMode, false);\n    this.throwOnError = get(options.throwOnError, true);\n    this.errorColor = get(options.errorColor, \"#cc0000\");\n}\n\nmodule.exports = Settings;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/katex/src/Settings.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/katex/src/Settings.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../node_modules/katex/src/Settings.js":"/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n/**\n * Helper function for getting a default value if the value is undefined\n */\nfunction get(option, defaultValue) {\n    return option === undefined ? defaultValue : option;\n}\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset by default in\n *                 textstyle or displaystyle (default false)\n */\nfunction Settings(options) {\n    // allow null options\n    options = options || {};\n    this.displayMode = get(options.displayMode, false);\n    this.throwOnError = get(options.throwOnError, true);\n    this.errorColor = get(options.errorColor, \"#cc0000\");\n}\n\nmodule.exports = Settings;\n"},"lineCount":29}},"error":null,"hash":"5024b025cc7ee4eb3f1e309bc5c4c027","cacheData":{"env":{}}}